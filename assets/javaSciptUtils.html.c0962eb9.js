import{_ as n,o as s,c as a,e}from"./app.b74d2e03.js";const p={},t=e(`<h1 id="javascript-\u5E38\u7528\u5DE5\u5177\u7C7B" tabindex="-1"><a class="header-anchor" href="#javascript-\u5E38\u7528\u5DE5\u5177\u7C7B" aria-hidden="true">#</a> javascript \u5E38\u7528\u5DE5\u5177\u7C7B</h1><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2><h3 id="\u5224\u65AD\u662F\u5426\u662F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u6570\u7EC4" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span><span class="token punctuation">}</span> arr \u6570\u7EC4
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrJudge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u53BB\u91CD
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arr</span>  \u6570\u7EC4
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrRemoveRepeat</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u5BF9\u8C61\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5BF9\u8C61\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u5BF9\u8C61\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u5BF9\u8C61\u53BB\u91CD
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arr1</span> \u6570\u7EC4\u5BF9\u8C61  [<span class="token punctuation">{</span> id: 1 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> id: 2 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> id: 3 <span class="token punctuation">}</span>];
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arr2</span> \u6570\u7EC4\u5BF9\u8C61  [<span class="token punctuation">{</span> id: 3 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> id: 4 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> id: 5 <span class="token punctuation">}</span>];
 * <span class="token keyword">@retrun</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> [ <span class="token punctuation">{</span> id: 1 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> id: 2 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> id: 3 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> id: 4 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> id: 5 <span class="token punctuation">}</span> ]
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">mergeArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u514B\u9686</span>
  <span class="token keyword">const</span> cloneArr1 <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> v
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    v <span class="token operator">=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token comment">// \u80FD\u627E\u5230\u76F8\u540C id \u5C5E\u6027\u503C\u7684\u6570\u636E\u5219\u8FDB\u5165\u5224\u65AD</span>
    <span class="token comment">// ~\u6309\u4F4D\u975E ~~\u53CC\u975E</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">~</span>cloneArr1<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>id <span class="token operator">===</span> v<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">continue</span>
    <span class="token punctuation">}</span>
    cloneArr1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> cloneArr1
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6392\u5E8F" aria-hidden="true">#</a> \u6570\u7EC4\u6392\u5E8F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u6392\u5E8F
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arr</span>  \u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span> <span class="token parameter">ascendFlag</span>   \u5347\u5E8F,\u9ED8\u8BA4\u4E3A true
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrOrderAscend</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> ascendFlag <span class="token operator">=</span> <span class="token boolean">true</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ascendFlag <span class="token operator">?</span> a <span class="token operator">-</span> b <span class="token operator">:</span> b <span class="token operator">-</span> a
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u6700\u5927\u503C" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6700\u5927\u503C" aria-hidden="true">#</a> \u6570\u7EC4\u6700\u5927\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u6700\u5927\u503C
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arr</span>  \u6570\u7EC4
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrMax</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u6C42\u548C" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6C42\u548C" aria-hidden="true">#</a> \u6570\u7EC4\u6C42\u548C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u6C42\u548C
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arr</span> \u6570\u7EC4
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrSum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> prev <span class="token operator">+</span> cur
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u5BF9\u8C61\u6C42\u548C" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5BF9\u8C61\u6C42\u548C" aria-hidden="true">#</a> \u6570\u7EC4\u5BF9\u8C61\u6C42\u548C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u5BF9\u8C61\u6C42\u548C
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">arrObj</span> \u6570\u7EC4\u5BF9\u8C61
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span> \u6570\u7EC4\u5BF9\u5E94\u7684 key \u503C
 */</span>
<span class="token comment">// eslint-disable-next-line no-unused-vars</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrObjSum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// eslint-disable-next-line no-undef</span>
  <span class="token keyword">return</span> arrObj<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> cur<span class="token punctuation">.</span>key<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u5408\u5E76-\u76EE\u524D\u5408\u5E76\u4E00\u7EF4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5408\u5E76-\u76EE\u524D\u5408\u5E76\u4E00\u7EF4" aria-hidden="true">#</a> \u6570\u7EC4\u5408\u5E76,\u76EE\u524D\u5408\u5E76\u4E00\u7EF4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u5408\u5E76,\u76EE\u524D\u5408\u5E76\u4E00\u7EF4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrOne</span> \u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrTwo</span> \u6570\u7EC4
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrConcat</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arrOne<span class="token punctuation">,</span> arrTwo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>arrOne<span class="token punctuation">,</span> <span class="token operator">...</span>arrTwo<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u662F\u5426\u5305\u542B\u67D0\u503C" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u662F\u5426\u5305\u542B\u67D0\u503C" aria-hidden="true">#</a> \u6570\u7EC4\u662F\u5426\u5305\u542B\u67D0\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u662F\u5426\u5305\u542B\u67D0\u503C
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arr</span> \u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  value \u503C,\u76EE\u524D\u53EA\u652F\u6301 String,Number,Boolean
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrIncludeValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u5E76\u96C6-\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5E76\u96C6-\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4\u5E76\u96C6,\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u5E76\u96C6,\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrOne</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrTwo</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrAndSet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arrOne<span class="token punctuation">,</span> arrTwo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arrOne<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrTwo<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>arrOne<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u4EA4\u96C6-\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u4EA4\u96C6-\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4\u4EA4\u96C6,\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u4EA4\u96C6,\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrOne</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrTwo</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrIntersection</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arrOne<span class="token punctuation">,</span> arrTwo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arrOne<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arrTwo<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u5DEE\u96C6-\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5DEE\u96C6-\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4\u5DEE\u96C6,\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u6570\u7EC4\u5DEE\u96C6,\u53EA\u652F\u6301\u4E00\u7EF4\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrOne</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrTwo</span>
 * eg: [1, 2, 3] [2, 4, 5] \u5DEE\u96C6\u4E3A[1,3,4,5]
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrDifference</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arrOne<span class="token punctuation">,</span> arrTwo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arrOne
    <span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrTwo<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>arrOne<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>arrTwo<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E24\u4E2A\u6570\u7EC4\u5408\u5E76\u6210\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4-\u8003\u8651\u5230\u590D\u6742\u5EA6-\u6240\u4EE5\u76EE\u524D\u652F\u6301\u4E24\u4E2A\u4E00\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E24\u4E2A\u6570\u7EC4\u5408\u5E76\u6210\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4-\u8003\u8651\u5230\u590D\u6742\u5EA6-\u6240\u4EE5\u76EE\u524D\u652F\u6301\u4E24\u4E2A\u4E00\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u4E24\u4E2A\u6570\u7EC4\u5408\u5E76\u6210\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4,\u8003\u8651\u5230\u590D\u6742\u5EA6,\u6240\u4EE5\u76EE\u524D\u652F\u6301\u4E24\u4E2A\u4E00\u7EF4\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u4E24\u4E2A\u6570\u7EC4\u5408\u5E76\u6210\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4,\u8003\u8651\u5230\u590D\u6742\u5EA6,\u6240\u4EE5\u76EE\u524D\u652F\u6301\u4E24\u4E2A\u4E00\u7EF4\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrOne</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">arrTwo</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>oneKey<span class="token punctuation">}</span></span> <span class="token parameter">oneKey</span> \u9009\u586B,\u5982\u679C\u4E24\u4E2A\u90FD\u672A\u4F20,\u76F4\u63A5\u4EE5 arrOne \u7684\u503C\u4F5C\u4E3A key,arrTwo \u4F5C\u4E3A value
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>twoKey<span class="token punctuation">}</span></span> <span class="token parameter">twoKey</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrTwoToArrObj</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arrOne<span class="token punctuation">,</span> arrTwo<span class="token punctuation">,</span> oneKey<span class="token punctuation">,</span> twoKey</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oneKey <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>twoKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arrOne<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">oneKey<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>oneKey<span class="token punctuation">]</span><span class="token operator">:</span> arrTwo<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arrOne<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">oneKey<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> oneKey<span class="token punctuation">,</span> <span class="token literal-property property">twoKey</span><span class="token operator">:</span> arrTwo<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C06\u5BF9\u8C61\u8F6C\u5316\u4E3A\u5BF9\u8C61\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5C06\u5BF9\u8C61\u8F6C\u5316\u4E3A\u5BF9\u8C61\u6570\u7EC4" aria-hidden="true">#</a> \u5C06\u5BF9\u8C61\u8F6C\u5316\u4E3A\u5BF9\u8C61\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5C06\u5BF9\u8C61\u8F6C\u5316\u4E3A\u5BF9\u8C61\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">objData</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">objToArr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">objData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> objData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// eslint-disable-next-line no-undef</span>
    o<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">//\u5373\u6DFB\u52A0\u4E86key\u503C\u4E5F\u8D4B\u4E86value\u503C o[i] \u76F8\u5F53\u4E8Eo.name \u6B64\u65F6i\u4E3A\u53D8\u91CF</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u591A\u6570\u7EC4\u76F8\u52A0" tabindex="-1"><a class="header-anchor" href="#\u591A\u6570\u7EC4\u76F8\u52A0" aria-hidden="true">#</a> \u591A\u6570\u7EC4\u76F8\u52A0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u591A\u6570\u7EC4\u76F8\u52A0
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>arr<span class="token punctuation">}</span></span> <span class="token parameter">arr</span> \u4E8C\u7EF4\u6570\u7EC4
 * [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 4, 5, 6 ] ]
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">arrTotalArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>
      result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result <span class="token comment">//[ 9, 12, 15 ]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F18\u5316\u9AD8\u9891\u7387\u6267\u884C\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u9AD8\u9891\u7387\u6267\u884C\u4EE3\u7801" aria-hidden="true">#</a> \u4F18\u5316\u9AD8\u9891\u7387\u6267\u884C\u4EE3\u7801</h2><h3 id="\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8282\u6D41" aria-hidden="true">#</a> \u8282\u6D41</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u8282\u6D41
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">func</span> \u6267\u884C\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">delay</span> \u8282\u6D41\u65F6\u95F4,\u6BEB\u79D2
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">throttle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
        <span class="token comment">// \u6216\u8005\u76F4\u63A5 func()</span>
        timer <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u9632\u6296" aria-hidden="true">#</a> \u9632\u6296</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u9632\u6296
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">fn</span> \u6267\u884C\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">wait</span> \u9632\u6296\u65F6\u95F4,\u6BEB\u79D2
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timeout <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token comment">// \u5982\u679C\u591A\u6B21\u89E6\u53D1\u5C06\u4E0A\u6B21\u8BB0\u5F55\u5EF6\u8FDF\u6E05\u9664\u6389</span>
    timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
      <span class="token comment">// \u6216\u8005\u76F4\u63A5 fn()</span>
      timeout <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> URL</h2><h3 id="\u83B7\u53D6-url-\u540E\u9762\u901A\u8FC7-\u4F20\u53C2\u7684\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-url-\u540E\u9762\u901A\u8FC7-\u4F20\u53C2\u7684\u53C2\u6570" aria-hidden="true">#</a> \u83B7\u53D6 url \u540E\u9762\u901A\u8FC7?\u4F20\u53C2\u7684\u53C2\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u83B7\u53D6 url \u540E\u9762\u901A\u8FC7?\u4F20\u53C2\u7684\u53C2\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">name</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getQueryString</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;(^|&amp;)&#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;=([^&amp;]*)(&amp;|$)&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href
  <span class="token keyword">const</span> search <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> r <span class="token operator">=</span> search<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">unescape</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="url-\u53C2\u6570\u8F6C\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#url-\u53C2\u6570\u8F6C\u5BF9\u8C61" aria-hidden="true">#</a> url \u53C2\u6570\u8F6C\u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span>   url\u53C2\u6570\u8F6C\u5BF9\u8C61
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">url</span>  default: window.location.href
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">parseQueryString</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  url <span class="token operator">=</span> <span class="token operator">!</span>url <span class="token operator">?</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">:</span> url
  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> search <span class="token operator">=</span>
    url<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;?&#39;</span> <span class="token operator">?</span> url<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>search <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  search <span class="token operator">=</span> search<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> query <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> search<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> pair <span class="token operator">=</span> search<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span>
    query<span class="token punctuation">[</span><span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>pair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>pair<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> query
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6B63\u5219" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219" aria-hidden="true">#</a> \u6B63\u5219</h2><h3 id="\u5224\u65AD\u662F\u5426\u662F\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u6570\u5B57" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u6570\u5B57</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u6570\u5B57
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{1,}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u5B57\u6BCD" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u5B57\u6BCD
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkLetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u5168\u90E8\u662F\u5C0F\u5199\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u5168\u90E8\u662F\u5C0F\u5199\u5B57\u6BCD" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u5168\u90E8\u662F\u5C0F\u5199\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u5168\u90E8\u662F\u5C0F\u5199\u5B57\u6BCD
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkLowercaseLetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u5927\u5199\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u5927\u5199\u5B57\u6BCD" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u5927\u5199\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span>  \u5224\u65AD\u662F\u5426\u662F\u5927\u5199\u5B57\u6BCD
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkCapitalLetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Z]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u5B57\u6BCD\u6216\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u5B57\u6BCD\u6216\u6570\u5B57" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u5B57\u6BCD\u6216\u6570\u5B57</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u5B57\u6BCD\u6216\u6570\u5B57
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number <span class="token operator">|</span><span class="token operator">|</span> String<span class="token punctuation">}</span></span> <span class="token parameter">data</span>  \u5B57\u7B26\u6216\u6570\u5B57
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkNumOrLetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9a-zA-Z]*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u4E2D\u6587" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u4E2D\u6587" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u4E2D\u6587</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u4E2D\u6587
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">data</span>  \u4E2D\u6587
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkChinese</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\u4E00-\\u9FA5]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u4E2D\u6587-\u6570\u5B57\u6216\u5B57\u6BCD" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u4E2D\u6587-\u6570\u5B57\u6216\u5B57\u6BCD" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u4E2D\u6587\uFF0C\u6570\u5B57\u6216\u5B57\u6BCD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u4E2D\u6587\uFF0C\u6570\u5B57\u6216\u5B57\u6BCD
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">data</span>  \u4E2D\u6587\uFF0C\u6570\u5B57\u6216\u5B57\u6BCD
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkChineseNumberLettter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9\\u4e00-\\u9fa5]+$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u90AE\u7BB1\u5730\u5740" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u90AE\u7BB1\u5730\u5740" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u90AE\u7BB1\u5730\u5740</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u90AE\u7BB1\u5730\u5740
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkEmail</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span>
    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9.!#$%&amp;&#39;*+\\/=?^_\`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u624B\u673A\u53F7" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u624B\u673A\u53F7" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u624B\u673A\u53F7</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u624B\u673A\u53F7\uFF0C\u53EA\u8981\u662F13,14,15,16,17,18,19\u5F00\u5934\u5373\u53EF
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkTelphone</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((\\+|00)86)?1[3-9]\\d{9}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u6B63\u786E\u7684\u7F51\u5740" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u6B63\u786E\u7684\u7F51\u5740" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u6B63\u786E\u7684\u7F51\u5740</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u6B63\u786E\u7684\u7F51\u5740
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">url</span> \u7F51\u5740
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkUrl</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
  a<span class="token punctuation">.</span>href <span class="token operator">=</span> url
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token punctuation">[</span>
      <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(http|https):$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>protocol<span class="token punctuation">)</span><span class="token punctuation">,</span>
      a<span class="token punctuation">.</span>host<span class="token punctuation">,</span>
      a<span class="token punctuation">.</span>pathname <span class="token operator">!==</span> url<span class="token punctuation">,</span>
      a<span class="token punctuation">.</span>pathname <span class="token operator">!==</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>x<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u4E3A-16-\u8FDB\u5236\u989C\u8272" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u4E3A-16-\u8FDB\u5236\u989C\u8272" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u4E3A 16 \u8FDB\u5236\u989C\u8272</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u4E3A16\u8FDB\u5236\u989C\u8272\uFF0Crgb \u6216 rgba
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span>  <span class="token parameter">str</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isColor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(#([0-9a-fA-F]{3}){1,2}|[rR][gG][Bb](\\((\\s*(2[0-4]\\d|25[0-5]|[01]?\\d{1,2})\\s*,){2}\\s*(2[0-4]\\d|25[0-5]|[01]?\\d{1,2})\\s*\\)|[Aa]\\((\\s*(2[0-4]\\d|25[0-5]|[01]?\\d{1,2})\\s*,){3}\\s*([01]|0\\.\\d+)\\s*\\)))$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    str
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u4E3A\u8EAB\u4EFD\u8BC1\u53F7" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u4E3A\u8EAB\u4EFD\u8BC1\u53F7" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u4E3A\u8EAB\u4EFD\u8BC1\u53F7</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span>  \u5224\u65AD\u662F\u5426\u4E3A\u8EAB\u4EFD\u8BC1\u53F7
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>String<span class="token operator">|</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">str</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isIdCard</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
    str
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BA2\u6237\u7AEF\u73AF\u5883\u68C0\u6D4B" tabindex="-1"><a class="header-anchor" href="#\u5BA2\u6237\u7AEF\u73AF\u5883\u68C0\u6D4B" aria-hidden="true">#</a> \u5BA2\u6237\u7AEF\u73AF\u5883\u68C0\u6D4B</h2><h3 id="\u5224\u65AD\u662F\u6D4F\u89C8\u5668\u5185\u6838" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u6D4F\u89C8\u5668\u5185\u6838" aria-hidden="true">#</a> \u5224\u65AD\u662F\u6D4F\u89C8\u5668\u5185\u6838</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u6D4F\u89C8\u5668\u5185\u6838
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkBrowser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">trident</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;Trident&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//IE\u5185\u6838</span>
    <span class="token literal-property property">presto</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;Presto&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//opera\u5185\u6838</span>
    <span class="token literal-property property">webKit</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;AppleWebKit&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//\u82F9\u679C\u3001\u8C37\u6B4C\u5185\u6838</span>
    <span class="token literal-property property">gecko</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;Gecko&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;KHTML&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token comment">//\u706B\u72D0\u5185\u6838</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u7EC8\u7AEF\u7C7B\u578B-\u503C\u6709-ios-android-ipad" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u7EC8\u7AEF\u7C7B\u578B-\u503C\u6709-ios-android-ipad" aria-hidden="true">#</a> \u5224\u65AD\u662F\u7EC8\u7AEF\u7C7B\u578B,\u503C\u6709 ios,android,iPad</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u7EC8\u7AEF\u7C7B\u578B,\u503C\u6709ios,android,iPad
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIosAndroidIpad</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ios</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span>u<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\(i[^;]+;( U;)? CPU.+Mac OS X</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//ios\u7EC8\u7AEF</span>
    <span class="token literal-property property">android</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;Android&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;Linux&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//android\u7EC8\u7AEF\u6216\u8005uc\u6D4F\u89C8\u5668</span>
    <span class="token literal-property property">iPad</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;iPad&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token comment">//\u662F\u5426iPad</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u662F\u5FAE\u4FE1-qq-\u6216-uc" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u662F\u5FAE\u4FE1-qq-\u6216-uc" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u662F\u5FAE\u4FE1,qq \u6216 uc</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u662F\u5426\u662F\u5FAE\u4FE1,qq \u6216 uc
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkWeixinQqUc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">weixin</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;MicroMessenger&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//\u662F\u5426\u5FAE\u4FE1</span>
    <span class="token literal-property property">qq</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">QQ</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;qq&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;MQQBrowser&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//\u662F\u5426QQ</span>
    <span class="token literal-property property">uc</span><span class="token operator">:</span> u<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;UCBrowser&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u68C0\u67E5\u662F\u5426\u662F-iphonex" tabindex="-1"><a class="header-anchor" href="#\u68C0\u67E5\u662F\u5426\u662F-iphonex" aria-hidden="true">#</a> \u68C0\u67E5\u662F\u5426\u662F IphoneX</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u68C0\u67E5\u662F\u5426\u662F IphoneX
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsIphoneX</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent
  <span class="token keyword">const</span> isIOS <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>u<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\(i[^;]+;( U;)? CPU.+Mac OS X</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isIOS <span class="token operator">&amp;&amp;</span> screen<span class="token punctuation">.</span>height <span class="token operator">&gt;=</span> <span class="token number">812</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u6D4F-\u89C8\u5668\u662F\u5426\u652F\u6301-webp-\u683C\u5F0F\u56FE\u7247" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u6D4F-\u89C8\u5668\u662F\u5426\u652F\u6301-webp-\u683C\u5F0F\u56FE\u7247" aria-hidden="true">#</a> \u5224\u65AD\u6D4F*\u89C8\u5668\u662F\u5426\u652F\u6301 webP \u683C\u5F0F\u56FE\u7247</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5224\u65AD\u6D4F*\u89C8\u5668\u662F\u5426\u652F\u6301webP\u683C\u5F0F\u56FE\u7247
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSupportWebP</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>map <span class="token operator">&amp;&amp;</span>
    document
      <span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/webp&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;data:image/webp&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u65F6\u95F4-\u65E5\u671F" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4-\u65E5\u671F" aria-hidden="true">#</a> \u65F6\u95F4/\u65E5\u671F</h2><h3 id="\u83B7\u53D6\u5E74\u4EFD" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5E74\u4EFD" aria-hidden="true">#</a> \u83B7\u53D6\u5E74\u4EFD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u83B7\u53D6\u5E74\u4EFD
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getYear</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u5F53\u524D\u6708\u4EFD" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5F53\u524D\u6708\u4EFD" aria-hidden="true">#</a> \u83B7\u53D6\u5F53\u524D\u6708\u4EFD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u83B7\u53D6\u5F53\u524D\u6708\u4EFD
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span> <span class="token parameter">fillFlag</span> \u5E03\u5C14\u503C,\u662F\u5426\u8865 0,\u9ED8\u8BA4\u4E3A true
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getMonth</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fillFlag <span class="token operator">=</span> <span class="token boolean">true</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> monRe <span class="token operator">=</span> mon
  <span class="token keyword">if</span> <span class="token punctuation">(</span>fillFlag<span class="token punctuation">)</span> mon <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">0</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mon<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> mon
  <span class="token keyword">return</span> monRe
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u65E5" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u65E5" aria-hidden="true">#</a> \u83B7\u53D6\u65E5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u83B7\u53D6\u65E5
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span> <span class="token parameter">fillFlag</span> \u5E03\u5C14\u503C,\u662F\u5426\u8865 0
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getDay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fillFlag <span class="token operator">=</span> <span class="token boolean">true</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> day <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> dayRe <span class="token operator">=</span> day
  <span class="token keyword">if</span> <span class="token punctuation">(</span>fillFlag<span class="token punctuation">)</span> day <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">0</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>day<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> day
  <span class="token keyword">return</span> dayRe
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u661F\u671F\u51E0" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u661F\u671F\u51E0" aria-hidden="true">#</a> \u83B7\u53D6\u661F\u671F\u51E0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u83B7\u53D6\u661F\u671F\u51E0
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getWhatDay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">7</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u5F53\u524D\u6708\u5929\u6570" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5F53\u524D\u6708\u5929\u6570" aria-hidden="true">#</a> \u83B7\u53D6\u5F53\u524D\u6708\u5929\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u83B7\u53D6\u5F53\u524D\u6708\u5929\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">year</span> \u5E74\u4EFD
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">month</span> \u6708\u4EFD
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getMonthNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">year<span class="token punctuation">,</span> month</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u5F53\u524D\u65F6\u95F4-yyyy-mm-dd-hh-mm-ss" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5F53\u524D\u65F6\u95F4-yyyy-mm-dd-hh-mm-ss" aria-hidden="true">#</a> \u83B7\u53D6\u5F53\u524D\u65F6\u95F4 yyyy-mm-dd,hh:mm:ss</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u83B7\u53D6\u5F53\u524D\u65F6\u95F4 yyyy-mm-dd,hh:mm:ss
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getYyMmDdHhMmSs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> month <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> hours <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> minu <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> second <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> hours<span class="token punctuation">,</span> minu<span class="token punctuation">,</span> second<span class="token punctuation">]</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    item <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> item <span class="token operator">:</span> item
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    year <span class="token operator">+</span>
    <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span>
    arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span>
    <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span>
    arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span>
    <span class="token string">&#39; &#39;</span> <span class="token operator">+</span>
    arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span>
    <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span>
    arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span>
    <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span>
    arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65F6\u95F4\u6233\u8F6C\u5316\u4E3A\u5E74\u6708\u65E5" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4\u6233\u8F6C\u5316\u4E3A\u5E74\u6708\u65E5" aria-hidden="true">#</a> \u65F6\u95F4\u6233\u8F6C\u5316\u4E3A\u5E74\u6708\u65E5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getzf</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">+</span>time <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">0</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> time
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u65F6\u95F4\u6233\u8F6C\u5316\u4E3A\u5E74\u6708\u65E5
 * <span class="token keyword">@param</span> <span class="token parameter">times</span> \u65F6\u95F4\u6233
 * <span class="token keyword">@param</span> <span class="token parameter">ymd</span> \u683C\u5F0F\u7C7B\u578B(yyyy-mm-dd,yyyy/mm/dd)
 * <span class="token keyword">@param</span> <span class="token parameter">hms</span> \u53EF\u9009,\u683C\u5F0F\u7C7B\u578B(hh,hh:mm,hh:mm:ss)
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>\u5E74\u6708\u65E5<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">timesToYyMmDd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">times<span class="token punctuation">,</span> ymd<span class="token punctuation">,</span> hms</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> oDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>times<span class="token punctuation">)</span>
  <span class="token keyword">const</span> oYear <span class="token operator">=</span> oDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> oMonth <span class="token operator">=</span> oDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> oDay <span class="token operator">=</span> oDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> oHour <span class="token operator">=</span> oDate<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> oMin <span class="token operator">=</span> oDate<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> oSec <span class="token operator">=</span> oDate<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> oTime <span class="token comment">// \u6700\u540E\u62FC\u63A5\u65F6\u95F4</span>
  <span class="token comment">// \u5E74\u6708\u65E5\u683C\u5F0F</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>ymd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;yyyy-mm-dd&#39;</span><span class="token operator">:</span>
      oTime <span class="token operator">=</span> oYear <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oMonth<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oDay<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token string">&#39;yyyy/mm/dd&#39;</span><span class="token operator">:</span>
      oTime <span class="token operator">=</span> oYear <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oMonth<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oDay<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u65F6\u5206\u79D2\u683C\u5F0F</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>hms<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;hh&#39;</span><span class="token operator">:</span>
      oTime <span class="token operator">=</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> oTime <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oHour<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token string">&#39;hh:mm&#39;</span><span class="token operator">:</span>
      oTime <span class="token operator">=</span> oTime <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oHour<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oMin<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token string">&#39;hh:mm:ss&#39;</span><span class="token operator">:</span>
      oTime <span class="token operator">=</span> oTime <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oHour<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oMin<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> <span class="token function">getzf</span><span class="token punctuation">(</span>oSec<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> oTime
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C06\u5E74\u6708\u65E5\u8F6C\u5316\u6210\u65F6\u95F4\u6233" tabindex="-1"><a class="header-anchor" href="#\u5C06\u5E74\u6708\u65E5\u8F6C\u5316\u6210\u65F6\u95F4\u6233" aria-hidden="true">#</a> \u5C06\u5E74\u6708\u65E5\u8F6C\u5316\u6210\u65F6\u95F4\u6233</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u5C06\u5E74\u6708\u65E5\u8F6C\u5316\u6210\u65F6\u95F4\u6233
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">time</span> yyyy/mm/dd \u6216yyyy-mm-dd \u6216yyyy-mm-dd hh:mm \u6216yyyy-mm-dd hh:mm:ss
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">YyMmDdToTimes</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6BD4\u8F83\u65F6\u95F4-1-\u5C0F\u4E8E\u65F6\u95F4-2" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83\u65F6\u95F4-1-\u5C0F\u4E8E\u65F6\u95F4-2" aria-hidden="true">#</a> \u6BD4\u8F83\u65F6\u95F4 1 \u5C0F\u4E8E\u65F6\u95F4 2</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  <span class="token keyword">@desc</span> \u6BD4\u8F83\u65F6\u95F4 1 \u5C0F\u4E8E\u65F6\u95F4 2
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">timeOne</span>  \u65F6\u95F4 1
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">timeTwo</span>  \u65F6\u95F4 2
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">compareTimeOneLessTwo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">timeOne<span class="token punctuation">,</span> timeTwo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65AD timeOne \u548C timeTwo \u662F\u5426</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>timeOne<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span>
    <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>timeTwo<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65F6\u95F4\u6233\u8F6C\u5316\u4E3A\u5E74\u6708\u65E5-1" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4\u6233\u8F6C\u5316\u4E3A\u5E74\u6708\u65E5-1" aria-hidden="true">#</a> \u65F6\u95F4\u6233\u8F6C\u5316\u4E3A\u5E74\u6708\u65E5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u65F6\u95F4\u6233\u8F6C\u5316\u4E3A\u5E74\u6708\u65E5
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Date<span class="token punctuation">}</span></span> <span class="token parameter">startTime</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formatPassTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">startTime</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> currentTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    time <span class="token operator">=</span> currentTime <span class="token operator">-</span> startTime<span class="token punctuation">,</span>
    day <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>time <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    hour <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>time <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    min <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>time <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    month <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>day <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    year <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>month <span class="token operator">/</span> <span class="token number">12</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>year<span class="token punctuation">)</span> <span class="token keyword">return</span> year <span class="token operator">+</span> <span class="token string">&#39;\u5E74\u524D&#39;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>month<span class="token punctuation">)</span> <span class="token keyword">return</span> month <span class="token operator">+</span> <span class="token string">&#39;\u4E2A\u6708\u524D&#39;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token keyword">return</span> day <span class="token operator">+</span> <span class="token string">&#39;\u5929\u524D&#39;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hour<span class="token punctuation">)</span> <span class="token keyword">return</span> hour <span class="token operator">+</span> <span class="token string">&#39;\u5C0F\u65F6\u524D&#39;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>min<span class="token punctuation">)</span> <span class="token keyword">return</span> min <span class="token operator">+</span> <span class="token string">&#39;\u5206\u949F\u524D&#39;</span>
  <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token string">&#39;\u521A\u521A&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u683C\u5F0F\u5316\u73B0\u5728\u8DDD-endtime-\u7684\u5269\u4F59\u65F6\u95F4" tabindex="-1"><a class="header-anchor" href="#\u683C\u5F0F\u5316\u73B0\u5728\u8DDD-endtime-\u7684\u5269\u4F59\u65F6\u95F4" aria-hidden="true">#</a> \u683C\u5F0F\u5316\u73B0\u5728\u8DDD\${endTime}\u7684\u5269\u4F59\u65F6\u95F4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span>   \u683C\u5F0F\u5316\u73B0\u5728\u8DDD$<span class="token punctuation">{</span>endTime<span class="token punctuation">}</span>\u7684\u5269\u4F59\u65F6\u95F4
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Date<span class="token punctuation">}</span></span> <span class="token parameter">endTime</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formatRemainTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">endTime</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> startDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u5F00\u59CB\u65F6\u95F4</span>
  <span class="token keyword">var</span> endDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>endTime<span class="token punctuation">)</span> <span class="token comment">//\u7ED3\u675F\u65F6\u95F4</span>
  <span class="token keyword">var</span> t <span class="token operator">=</span> endDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u65F6\u95F4\u5DEE</span>
  <span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    s <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    d <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">3600</span> <span class="token operator">/</span> <span class="token number">24</span><span class="token punctuation">)</span>
    h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">24</span><span class="token punctuation">)</span>
    m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> d <span class="token operator">+</span> <span class="token string">&#39;\u5929 &#39;</span> <span class="token operator">+</span> h <span class="token operator">+</span> <span class="token string">&#39;\u5C0F\u65F6 &#39;</span> <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token string">&#39;\u5206\u949F &#39;</span> <span class="token operator">+</span> s <span class="token operator">+</span> <span class="token string">&#39;\u79D2&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u662F\u5426\u4E3A\u540C\u4E00\u5929" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u662F\u5426\u4E3A\u540C\u4E00\u5929" aria-hidden="true">#</a> \u5224\u65AD\u662F\u5426\u4E3A\u540C\u4E00\u5929</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span>   \u5224\u65AD\u662F\u5426\u4E3A\u540C\u4E00\u5929
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Date<span class="token punctuation">}</span></span> <span class="token parameter">date1</span>
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Date<span class="token punctuation">}</span></span> <span class="token parameter">date2</span> \u53EF\u9009\uFF0F\u9ED8\u8BA4\u503C\uFF1A\u5F53\u5929
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isSameDay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">date1<span class="token punctuation">,</span> date2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>date2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    date2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> date1_year <span class="token operator">=</span> date1<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    date1_month <span class="token operator">=</span> date1<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    date1_date <span class="token operator">=</span> date1<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> date2_year <span class="token operator">=</span> date2<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    date2_month <span class="token operator">=</span> date2<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    date2_date <span class="token operator">=</span> date2<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    date1_date <span class="token operator">===</span> date2_date <span class="token operator">&amp;&amp;</span>
    date1_month <span class="token operator">===</span> date2_month <span class="token operator">&amp;&amp;</span>
    date1_year <span class="token operator">===</span> date2_year
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8BA1\u7B97-starttime-endtime-\u7684\u5269\u4F59\u65F6\u95F4" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u7B97-starttime-endtime-\u7684\u5269\u4F59\u65F6\u95F4" aria-hidden="true">#</a> \u8BA1\u7B97\${startTime - endTime}\u7684\u5269\u4F59\u65F6\u95F4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desc</span> \u8BA1\u7B97$<span class="token punctuation">{</span>startTime - endTime<span class="token punctuation">}</span>\u7684\u5269\u4F59\u65F6\u95F4 \uFF0CstartTime\u5927\u4E8EendTime\u65F6\uFF0C\u5747\u8FD4\u56DE0
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> Date <span class="token operator">|</span> String <span class="token punctuation">}</span></span> <span class="token parameter">startTime</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> Date <span class="token operator">|</span> String <span class="token punctuation">}</span></span> <span class="token parameter">endTime</span>
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span> Object <span class="token punctuation">}</span></span> <span class="token punctuation">{</span> d, h, m, s <span class="token punctuation">}</span> \u5929 \u65F6 \u5206 \u79D2
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">timeLeft</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">startTime<span class="token punctuation">,</span> endTime</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>startTime <span class="token operator">||</span> <span class="token operator">!</span>endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> startDate<span class="token punctuation">,</span> endDate
  <span class="token keyword">if</span> <span class="token punctuation">(</span>startTime <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    startDate <span class="token operator">=</span> startTime
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    startDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>startTime<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//\u5F00\u59CB\u65F6\u95F4</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endTime <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    endDate <span class="token operator">=</span> endTime
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    endDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>endTime<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//\u7ED3\u675F\u65F6\u95F4</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> t <span class="token operator">=</span> endDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    s <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    d <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">3600</span> <span class="token operator">/</span> <span class="token number">24</span><span class="token punctuation">)</span>
    h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">24</span><span class="token punctuation">)</span>
    m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> d<span class="token punctuation">,</span> h<span class="token punctuation">,</span> m<span class="token punctuation">,</span> s <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,105),o=[t];function c(l,i){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","javaSciptUtils.html.vue"]]);export{u as default};
