import{_ as n,o as s,c as a,e}from"./app.b74d2e03.js";const t={},p=e(`<h1 id="ecmascript6-\u5B66\u4E60\u7B14\u8BB0" tabindex="-1"><a class="header-anchor" href="#ecmascript6-\u5B66\u4E60\u7B14\u8BB0" aria-hidden="true">#</a> ECMAScript6 \u5B66\u4E60\u7B14\u8BB0</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>\u7B14\u8BB0\u6839\u636E\u300AES6 \u6807\u51C6\u5165\u95E8\u300B\uFF08\u7B2C 3 \u7248\uFF09\u962E\u4E00\u5CF0\u8457</li><li>\u4E66\u7C4D\u5728\u7EBF\u5730\u5740\uFF1Ahttps://es6.ruanyifeng.com/</li></ul></div><h2 id="let-\u548C-const-\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#let-\u548C-const-\u547D\u4EE4" aria-hidden="true">#</a> let \u548C const \u547D\u4EE4</h2><h3 id="let-\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#let-\u547D\u4EE4" aria-hidden="true">#</a> let \u547D\u4EE4</h3><h4 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u7528\u6CD5</h4><p>es6 \u65B0\u589E\u4E86 let \u547D\u4EE4\uFF0C\u7528\u6765\u58F0\u660E\u53D8\u91CF\uFF0C\u4ED6\u7684\u7528\u6CD5\u7C7B\u4F3C\u4E8E var\uFF0C\u4F46\u662F\u53D8\u91CF\u6240\u6709\u7684\u58F0\u660E\u53EA\u5728 let \u58F0\u660E\u7684\u4EE3\u7801\u5757\u5185\u6709\u6548</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">10</span>
<span class="token punctuation">}</span>
a <span class="token comment">// 1</span>
b <span class="token comment">// ReferenceError: b is not defined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>var \u58F0\u660E\u53D8\u91CF\u4F1A\u8FDB\u884C\u53D8\u91CF\u63D0\u5347\u6240\u4EE5\u80FD\u5728\u4EE3\u7801\u5757\u5916\u9762\u8FDB\u884C\u8BBF\u95EE</li><li>let \u58F0\u660E\u53D8\u91CF\uFF0C\u6CA1\u6709\u53D8\u91CF\u63D0\u5347\uFF0C\u4E0A\u9762\u7684\u62A5\u9519\uFF0C\u8868\u660E let \u58F0\u660E\u58F0\u660E\u53D8\u91CF\u53EA\u5728\u5B83\u6240\u5728\u7684\u4EE3\u7801\u5757\u6709\u6548</li></ul><p>for \u5FAA\u73AF\u5C31\u5F88\u9002\u5408\u4F7F\u7528 let\uFF0C\u6253\u5370\u7684 i \u5E94\u5F53\u5728 for \u5FAA\u73AF\u4F53\u5185\u6709\u6548\uFF0C\u5728\u5FAA\u73AF\u4F53\u5916\u5F15\u7528\u5C31\u4F1A\u62A5\u9519\uFF0C\u5982\u679C\u6539\u4E3A var \u5219\u53EF\u4EE5\u5728\u5FAA\u73AF\u4F53\u5916\u5F15\u7528\uFF0C\u8FD8\u662F var \u7684\u53D8\u91CF\u63D0\u793A\u7684\u4F5C\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">//ReferenceError: i is not defined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u4EE3\u7801\u5982\u679C\u4F7F\u7528 var\uFF0C\u8F93\u51FA\u7ED3\u679C\u5219\u4E3A 10\uFF0C\u56E0\u4E3A\u53D8\u91CF\u4F7F\u7528 var \u58F0\u660E\uFF0Cvar \u7684\u53D8\u91CF\u63D0\u5347\u5728\u5168\u5C40\u8303\u56F4\u5185\u6709\u6548\uFF0C\u6240\u4EE5\u53EA\u6709\u4E00\u4E2A\u53D8\u91CF i\uFF0C\u6BCF\u6B21\u5FAA\u73AF\u90FD\u4F1A\u6539\u53D8\u53D8\u91CF i \u7684\u503C\uFF0C\u800C\u5FAA\u73AF\u5185\u88AB\u8D4B\u7ED9\u6570\u7EC4 a \u7684\u51FD\u6570\u5185\u90E8\u7684 console.log(i)\uFF0C\u91CC\u9762\u7684 i \u6307\u5411\u7684\u5C31\u662F\u5168\u5C40\u7684 i\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6240\u6709\u6570\u7EC4 a \u7684\u6210\u5458\u91CC\u9762\u7684 i\uFF0C\u6307\u5411\u7684\u90FD\u662F\u540C\u4E00\u4E2A i\uFF0C\u5BFC\u81F4\u8FD0\u884C\u65F6\u8F93\u51FA\u7684\u662F\u6700\u540E\u4E00\u8F6E\u7684 i \u7684\u503C\uFF0C\u4E5F\u5C31\u662F 10</p><p>\u5982\u679C\u4F7F\u7528 let\uFF0C\u58F0\u660E\u7684\u53D8\u91CF\u4EC5\u5728\u5757\u7EA7\u4F5C\u7528\u57DF\u5185\u6709\u6548\uFF0C\u6700\u540E\u8F93\u51FA\u7684\u662F 6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
arr<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E0D\u5B58\u5728\u53D8\u91CF\u63D0\u5347" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u5B58\u5728\u53D8\u91CF\u63D0\u5347" aria-hidden="true">#</a> \u4E0D\u5B58\u5728\u53D8\u91CF\u63D0\u5347</h4><p>var \u547D\u4EE4\u4F1A\u53D1\u751F\u201C\u53D8\u91CF\u63D0\u5347\u201D\u73B0\u8C61\uFF0C\u5373\u53D8\u91CF\u53EF\u4EE5\u5728\u58F0\u660E\u4E4B\u524D\u4F7F\u7528\uFF0C\u503C\u4E3A undefined\u3002\u8FD9\u79CD\u73B0\u8C61\u591A\u591A\u5C11\u5C11\u662F\u6709\u4E9B\u5947\u602A\u7684\uFF0C\u6309\u7167\u4E00\u822C\u7684\u903B\u8F91\uFF0C\u53D8\u91CF\u5E94\u8BE5\u5728\u58F0\u660E\u8BED\u53E5\u4E4B\u540E\u624D\u53EF\u4EE5\u4F7F\u7528\u3002</p><p>\u4E3A\u4E86\u7EA0\u6B63\u8FD9\u79CD\u73B0\u8C61\uFF0Clet \u547D\u4EE4\u6539\u53D8\u4E86\u8BED\u6CD5\u884C\u4E3A\uFF0C\u5B83\u6240\u58F0\u660E\u7684\u53D8\u91CF\u4E00\u5B9A\u8981\u5728\u58F0\u660E\u540E\u4F7F\u7528\uFF0C\u5426\u5219\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// var</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token comment">// \u8F93\u51FAundefined</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token number">2</span>

<span class="token comment">// let</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span> <span class="token comment">// \u62A5\u9519ReferenceError</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6682\u65F6\u6027\u6B7B\u533A" tabindex="-1"><a class="header-anchor" href="#\u6682\u65F6\u6027\u6B7B\u533A" aria-hidden="true">#</a> \u6682\u65F6\u6027\u6B7B\u533A</h4><p>\u53EA\u8981\u5757\u7EA7\u4F5C\u7528\u57DF\u5B58\u5728 let\uFF0C\u6240\u58F0\u660E\u7684\u53D8\u91CF\u5C31\u7ED1\u5B9A\uFF08binding\uFF09\u8FD9\u4E2A\u533A\u57DF\uFF0C\u4E0D\u53D7\u5916\u90E8\u5F71\u54CD\u3002 <strong>ES6 \u660E\u786E\u89C4\u5B9A\uFF0C\u5982\u679C\u533A\u5757\u4E2D\u5B58\u5728 let \u548C const \u547D\u4EE4\uFF0C\u8FD9\u4E2A\u533A\u5757\u5BF9\u8FD9\u4E9B\u547D\u4EE4\u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u4ECE\u4E00\u5F00\u59CB\u5C31\u5F62\u6210\u4E86\u5C01\u95ED\u4F5C\u7528\u57DF\u3002\u51E1\u662F\u5728\u58F0\u660E\u4E4B\u524D\u5C31\u4F7F\u7528\u8FD9\u4E9B\u53D8\u91CF\uFF0C\u5C31\u4F1A\u62A5\u9519</strong>\u603B\u4E4B\u5728 let \u58F0\u660E\u4E4B\u524D\uFF0C\u8BE5\u53D8\u91CF\u90FD\u662F\u4E0D\u53EF\u7528\u7684\uFF0C\u5728\u8BED\u6CD5\u4E0A\u79F0\u4E3A\u201C\u6682\u65F6\u6027\u6B7B\u533A\u201D\uFF08temporal dead zone\uFF0C\u7B80\u79F0 TDZ\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// TDZ\u5F00\u59CB</span>
  tmp <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span> <span class="token comment">// ReferenceError</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span> <span class="token comment">// ReferenceError</span>

  <span class="token keyword">let</span> tmp <span class="token comment">// TDZ\u7ED3\u675F</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span> <span class="token comment">// undefined</span>

  tmp <span class="token operator">=</span> <span class="token number">123</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span> <span class="token comment">// 123</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9690\u853D\u7684\u6B7B\u533A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">x <span class="token operator">=</span> y<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ReferenceError: Cannot access &#39;y&#39; before initialization</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\uFF0Cx=y \u6B64\u65F6\u7684 y \u8FD8\u6CA1\u6709\u8FDB\u884C\u58F0\u660E\uFF0C\u5C5E\u4E8E\u201C\u6682\u65F6\u6027\u6B7B\u533A\u201D\uFF0C\u5982\u679C\u8C03\u6362\u4F4D\u7F6E\u6216\u8005 y \u7684\u9ED8\u8BA4\u503C\u4E3A x \u5C31\u4E0D\u4F1A\u51FA\u73B0\u9519\u8BEF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> x <span class="token operator">=</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//[2,2]</span>
<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">function</span> <span class="token function">baror</span><span class="token punctuation">(</span><span class="token parameter">x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> y <span class="token operator">=</span> x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token function">baror</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//[2,2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E0D\u5141\u8BB8\u91CD\u590D\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u5141\u8BB8\u91CD\u590D\u58F0\u660E" aria-hidden="true">#</a> \u4E0D\u5141\u8BB8\u91CD\u590D\u58F0\u660E</h4><p>let \u4E0D\u5141\u8BB8\u5728\u76F8\u540C\u4F5C\u7528\u57DF\u5185\uFF0C\u91CD\u590D\u58F0\u660E\u540C\u4E00\u4E2A\u53D8\u91CF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">funcvar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">10</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">10</span>
<span class="token punctuation">}</span> <span class="token comment">//SyntaxError: Identifier &#39;a&#39; has already been declared. (3:6)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),c=[p];function o(i,l){return s(),a("div",null,c)}const r=n(t,[["render",o],["__file","ECMAScript6.html.vue"]]);export{r as default};
