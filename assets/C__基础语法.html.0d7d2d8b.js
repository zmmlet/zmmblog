import{_ as e,r as o,o as l,c,a as n,b as s,d as p,e as a}from"./app.b74d2e03.js";const i={},u=a(`<h1 id="c-\u57FA\u7840\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#c-\u57FA\u7840\u8BED\u6CD5" aria-hidden="true">#</a> C++\u57FA\u7840\u8BED\u6CD5</h1><h2 id="c-\u521D\u8BC6" tabindex="-1"><a class="header-anchor" href="#c-\u521D\u8BC6" aria-hidden="true">#</a> C++ \u521D\u8BC6</h2><h3 id="\u57FA\u7840\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u8F93\u51FA" aria-hidden="true">#</a> \u57FA\u7840\u8F93\u51FA</h3><ul><li><code>#include &lt;iostream&gt;</code> \u5934\u6587\u4EF6</li><li>std::cout \u8F93\u51FA\u51FD\u6570 ,\u9762\u5411\u5BF9\u8C61\u7684\u53D8\u6210</li><li>printf(&quot;\u8F93\u51FA\u5185\u5BB9&quot;); c \u8BED\u8A00\u4E2D\u7684\u51FD\u6570\uFF0C\u4E5F\u53EF\u4EE5\u6267\u884C\u539F\u56E0\u65F6 c++ \u65F6 c \u7684\u8D85\u96C6\uFF0Cc \u7684\u591A\u6570\u8BED\u6CD5 c++\u90FD\u652F\u6301</li><li>/n \u4F5C\u7528\u6362\u884C\u7B26</li><li>std::endl; \u4E5F\u662F\u6362\u884C\u7B26\u7684\u4F5C\u7528</li><li>\u5728\u7F16\u8BD1\u5668\u4E2D\\\u53EA\u80FD\u8F93\u5165 2 \u7684\u500D\u6570\u5217\u5165\\ \u7F16\u8BD1\u540E\u8F93\u5165\u53EA\u6709\u4E00\u4E2A\\\u4E0D\u80FD\u5355\u4E2A\u8F93\u5165\uFF0C\u9664\u975E\u662F\\n</li><li>\u5173\u952E\u5B57\u4E25\u683C\u533A\u5206\u5927\u5C0F\u5199</li><li>std::cout moi</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">//#\u4E3A\u9884\u5904\u7406\u6267\u884C</span>
<span class="token comment">//&lt;iostream&gt; \u5E93\u51FD\u6570</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello World\\\\C++\\n&quot;</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5927\u5BB6\u4F19\\n\u6211\u7684\u540D\u5B57\u53EB\\&quot;\u5F20\u4E09\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    system \u7CFB\u7EDF\u5173\u673A\u547D\u4EE4
    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;shutdown /s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    system \u7CFB\u7EDF\u5173\u673A\u53D6\u6D88\u547D\u4EE4
   <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;shutdown /a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u6682\u505C</span>
  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pause\u5DF2\u88AB\u6210\u529F\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;cls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;color 12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u91CA" aria-hidden="true">#</a> \u6CE8\u91CA</h3><ol><li>\u5355\u884C\u6CE8\u91CA //</li><li>\u591A\u884C\u6CE8\u91CA /* */</li></ol><h3 id="\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF" aria-hidden="true">#</a> \u53D8\u91CF</h3><p><strong>\u53D8\u91CF\u7684\u521B\u5EFA\u8BED\u6CD5\uFF1A\u6570\u636E\u7C7B\u578B \u53D8\u91CF\u540D = \u53D8\u91CF\u521D\u59CB\u503C</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">//#\u4E3A\u9884\u5904\u7406\u6267\u884C</span>
<span class="token comment">//&lt;iostream&gt; \u5E93\u51FD\u6570</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5E38\u91CF" aria-hidden="true">#</a> \u5E38\u91CF</h3><p><strong>\u4F5C\u7528\uFF1A\u7528\u4E8E\u8BB0\u5F55\u7A0B\u5E8F\u4E2D\u4E0D\u53EF\u66F4\u6539\u7684\u6570\u636E\uFF0CC++ \u5B9A\u4E49\u5E38\u91CF\u7684\u4E24\u79CD\u65B9\u5F0F</strong></p><ol><li>#define \u5B8F\u5E38\u91CF\uFF1A #define \u5E38\u91CF\u540D \u5E38\u91CF\u503C \u901A\u5E38\u5728\u6587\u4EF6\u4E0A\u65B9\u5B9A\u4E49\uFF0C\u8868\u793A\u4E00\u4E2A\u5E38\u91CF</li><li>const \u4FEE\u9970\u7684\u53D8\u91CF const \u6570\u636E\u7C7B\u578B \u5E38\u91CF\u540D = \u5E38\u91CF\u503C \u901A\u5E38\u5728\u53D8\u91CF\u5B9A\u4E49\u524D\u52A0\u5173\u952E\u5B57 const \u4FEE\u9970\u8BE5\u53D8\u91CF\u4E3A\u5E38\u91CF\uFF0C\u4E0D\u53EF\u4FEE\u6539</li></ol><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">//#\u4E3A\u9884\u5904\u7406\u6267\u884C</span>
<span class="token comment">//&lt;iostream&gt; \u5E93\u51FD\u6570</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token comment">// 1. #define \u5B8F\u5E38\u91CF</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">Day</span> <span class="token expression"><span class="token number">7</span></span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E00\u5468\u5171\u6709\uFF1A &quot;</span> <span class="token operator">&lt;&lt;</span> Day <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5929&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token comment">//2. const \u4FEE\u9970\u7684\u53D8\u91CF</span>
  <span class="token keyword">const</span> <span class="token keyword">int</span> month <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
  <span class="token comment">//month = 80 // const \u4FEE\u9970\u7684\u53D8\u91CF\u4E5F\u662F\u5E38\u91CF\u4E0D\u53EF\u4FEE\u6539</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E00\u5E74\u5171\u6709\uFF1A &quot;</span> <span class="token operator">&lt;&lt;</span> month <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5929&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5173\u952E\u5B57" aria-hidden="true">#</a> \u5173\u952E\u5B57</h3>`,15),r=n("strong",null,"\u4F5C\u7528\uFF1A\u5173\u952E\u5B57\u662F C++\u4E2D\u9884\u7559\u7684\u5355\u8BCD",-1),k={href:"https://www.runoob.com/w3cnote/cpp-keyword-intro.html",target:"_blank",rel:"noopener noreferrer"},d=a(`<h3 id="\u6807\u8BC6\u7B26\u547D\u540D\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u6807\u8BC6\u7B26\u547D\u540D\u89C4\u5219" aria-hidden="true">#</a> \u6807\u8BC6\u7B26\u547D\u540D\u89C4\u5219</h3><p><strong>\u4F5C\u7528\uFF1AC++\u89C4\u5B9A\u7ED9\u6807\u8BC6\u7B26\uFF08\u53D8\u91CF\u3001\u5E38\u91CF\uFF09\u547D\u540D\u65F6\uFF0C\u6709\u4E00\u5957\u89C4\u5219</strong></p><ul><li>\u6807\u8BC6\u7B26\u4E0D\u80FD\u662F\u5173\u952E\u5B57</li><li>\u6807\u8BC6\u7B26\u53EA\u80FD\u7531\u5B57\u6BCD\u3001\u6570\u5B57\u3001\u4E0B\u5212\u7EBF\u7EC4\u6210</li><li>\u7B2C\u4E00\u4E2A\u5B57\u7B26\u5FC5\u987B\u4E3A\u5B57\u6BCD\u6216\u4E0B\u5212\u7EBF</li><li>\u6807\u8BC6\u7B26\u4E2D\u5B57\u6BCD\u533A\u5206\u5927\u5C0F\u5199 \u5EFA\u8BAE\uFF1A\u7ED9\u6807\u8BC6\u7B26\u547D\u540D\u65F6\uFF0C\u4E89\u53D6\u505A\u5230\u89C1\u540D\u77E5\u610F\u7684\u6548\u679C</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> month <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E00\u5E74\u5171\u6709\uFF1A &quot;</span> <span class="token operator">&lt;&lt;</span> month <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5929&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token keyword">int</span> _abs <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> _abs <span class="token operator">+</span> num2<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;contunt:&quot;</span> <span class="token operator">&lt;&lt;</span> c <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u636E\u7C7B\u578B</h2><p>C++\u89C4\u5B9A\u5728\u521B\u5EFA\u4E00\u4E2A\u53D8\u91CF\u6216\u5E38\u91CF\u65F6\uFF0C\u5FC5\u987B\u8981\u6307\u5B9A\u51FA\u54CD\u5E94\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u5426\u5219\u65E0\u6CD5\u7ED9\u53D8\u91CF\u5206\u914D\u5185\u5B58</p><h3 id="\u6574\u578B" tabindex="-1"><a class="header-anchor" href="#\u6574\u578B" aria-hidden="true">#</a> \u6574\u578B</h3><p>**\u4F5C\u7528\uFF1A**\u6574\u578B\u53D8\u91CF\u8868\u793A\u7684\u662F\u6574\u6570\u7C7B\u578B\u7684\u6570\u636E\uFF0C<strong>\u6570\u636E\u7C7B\u578B\u5B58\u5728\u7684\u610F\u4E49\u5C31\u662F\u7ED9\u53D8\u91CF\u5206\u914D\u4E00\u4E2A\u5408\u9002\u7684\u5185\u5B58\u7A7A\u95F4</strong> C++\u4E2D\u80FD\u8868\u793A\u6574\u578B\u7684\u7C7B\u578B\u6709\u4EE5\u4E0B\u51E0\u79CD\u65B9\u5F0F\uFF0C<strong>\u533A\u522B\u5728\u4E8E\u6240\u5360\u5185\u5B58\u7A7A\u95F4\u4E0D\u540C</strong></p><table><thead><tr><th>\u6570\u636E\u7C7B\u578B</th><th>\u5360\u7528\u7A7A\u95F4</th><th>\u53D6\u503C\u8303\u56F4</th></tr></thead><tbody><tr><td>short(\u77ED\u6574\u578B)</td><td>2 \u5B57\u8282</td><td>(-2^15~2^12-1)</td></tr><tr><td>int(\u6574\u578B)</td><td>4 \u5B57\u8282</td><td>(-2^31~2^31-1)</td></tr><tr><td>long(\u957F\u6574\u578B)</td><td>Windows \u4E3A 4 \u5B57\u8282\u3001Linux \u4E3A 4 \u5B57\u8282\uFF0832 \u4F4D\uFF09\u30018 \u5B57\u8282\uFF0864 \u4F4D\uFF09</td><td>(-2^31~2^31-1)</td></tr><tr><td>long long(\u957F\u957F\u6574\u578B)</td><td>8 \u5B57\u8282</td><td>(-2^63~2^63-1)</td></tr></tbody></table><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//1.\u77ED\u6574\u578B(-32768~32767) \u8D85\u51FA\u8303\u56F4\u5219\u663E\u793A\u6700\u5C0F\u6570</span>
    <span class="token keyword">short</span> age <span class="token operator">=</span> <span class="token number">32768</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;short_age=&quot;</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token comment">//2.\u6574\u578B \u6700\u5E38\u7528</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">32768</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;int_a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token comment">//3.\u957F\u6574\u578B</span>
    <span class="token keyword">long</span> num3 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;long_num3=&quot;</span> <span class="token operator">&lt;&lt;</span> num3 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token comment">//4.\u957F\u957F\u6574\u578B</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> num4 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;long_long_num4=&quot;</span> <span class="token operator">&lt;&lt;</span> num4 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sizeof-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#sizeof-\u5173\u952E\u5B57" aria-hidden="true">#</a> sizeof \u5173\u952E\u5B57</h3><p>\u4F5C\u7528\uFF1A\u5229\u7528 sizeof \u5173\u952E\u5B57\u53EF\u4EE5\u7EDF\u8BA1\u6570\u636E\u7C7B\u578B\u6240\u5360\u5185\u5B58\u5927\u5C0F \u8BED\u6CD5\uFF1A<code>sizeof(\u6570\u636E\u7C7B\u578B\u3001\u6216\u8005\u53D8\u91CF)</code></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//1.\u77ED\u6574\u578B</span>
  <span class="token keyword">short</span> age <span class="token operator">=</span> <span class="token number">32768</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;short\u7C7B\u578B\u6240\u5360\u5185\u5B58\u7A7A\u95F4\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;int\u7C7B\u578B\u6240\u5360\u5185\u5B58\u7A7A\u95F4\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;long\u7C7B\u578B\u6240\u5360\u5185\u5B58\u7A7A\u95F4\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;long_long_\u7C7B\u578B\u6240\u5360\u5185\u5B58\u7A7A\u95F4\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u578B-\u6D6E\u70B9\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u578B-\u6D6E\u70B9\u578B" aria-hidden="true">#</a> \u5B9E\u578B\uFF08\u6D6E\u70B9\u578B\uFF09</h3><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u8868\u793A\u5C0F\u6570</p><p><strong>\u6D6E\u70B9\u578B\u53D8\u91CF\u5206\u4E3A\u4E24\u79CD, \u4E24\u8005\u7684\u533A\u522B\u5728\u4E8E\u8868\u793A\u7684\u6709\u6548\u6570\u5B57\u8303\u56F4\u4E0D\u540C</strong></p><ol><li>\u5355\u7CBE\u5EA6 float</li><li>\u53CC\u7CBE\u5EA6 double</li></ol><table><thead><tr><th>\u6570\u636E\u7C7B\u578B</th><th>\u5360\u7528\u7A7A\u95F4</th><th>\u6709\u6548\u6570\u5B57\u8303\u56F4</th></tr></thead><tbody><tr><td>float</td><td>4 \u5B57\u8282</td><td>7 \u4F4D\u6709\u6548\u6570\u5B57</td></tr><tr><td>double</td><td>8 \u5B57\u8282</td><td>15~16 \u4F4D\u6709\u6548\u6570\u5B57</td></tr></tbody></table><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u8F93\u51FA\u4E00\u4E2A\u5C0F\u6570\u4F1A\u663E\u793A 6 \u4F4D\u6709\u6548\u6570\u5B57</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//1. \u5355\u7CBE\u5EA6</span>
  <span class="token keyword">float</span> f1 <span class="token operator">=</span> <span class="token number">3.14f</span><span class="token punctuation">;</span>
  <span class="token comment">//2. \u53CC\u7CBE\u5EA6</span>
  <span class="token keyword">double</span> f2 <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>

  cout <span class="token operator">&lt;&lt;</span> f1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> f2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token comment">//float\u5360\u7528\u5185\u5B58\u7A7A\u95F4\u4E3A\uFF1A4</span>
  <span class="token comment">//double\u5360\u7528\u5185\u5B58\u7A7A\u95F4\u4E3A\uFF1A8</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;float\u5360\u7528\u5185\u5B58\u7A7A\u95F4\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;double\u5360\u7528\u5185\u5B58\u7A7A\u95F4\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

  <span class="token comment">//\u79D1\u5B66\u8BA1\u6570\u6CD5</span>
  <span class="token keyword">float</span> f3 <span class="token operator">=</span> <span class="token number">3e2</span><span class="token punctuation">;</span> <span class="token comment">// 3 * 10 ^ 2</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u79D1\u5B66\u8BA1\u6570\u6CD5&quot;</span> <span class="token operator">&lt;&lt;</span> f3 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

  <span class="token keyword">float</span> f4 <span class="token operator">=</span> <span class="token number">3e-2</span><span class="token punctuation">;</span> <span class="token comment">// 3*0.1</span>
  cout <span class="token operator">&lt;&lt;</span> f4 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B57\u7B26\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u578B" aria-hidden="true">#</a> \u5B57\u7B26\u578B</h3><p>\u4F5C\u7528\uFF1A\u5B57\u7B26\u578B\u53D8\u91CF\u7528\u4E8E\u663E\u793A\u5355\u4E2A\u5B57\u7B26 \u8BED\u6CD5\uFF1A<code>char ch = &#39;a&#39;;</code> \u6CE8\u610F\uFF1A</p><ol><li>\u5728\u663E\u793A\u5B57\u7B26\u578B\u53D8\u91CF\u65F6\uFF0C\u7528\u5355\u5F15\u53F7\u5C06\u5B57\u7B26\u62EC\u8D77\u6765\uFF0C\u4E0D\u8981\u7528\u53CC\u5F15\u53F7</li><li>\u5355\u5F15\u53F7\u5185\u53EA\u80FD\u6709\u4E00\u4E2A\u5B57\u7B26\uFF0C\u4E0D\u53EF\u4EE5\u662F\u5B57\u7B26\u4E32</li></ol>`,23),v=n("li",null,"C \u548C C++\u4E2D\u5B57\u7B26\u578B\u53D8\u91CF\u53EA\u5360\u7528 1 \u4E2A\u5B57\u8282",-1),m={href:"http://ascii.911cha.com/",target:"_blank",rel:"noopener noreferrer"},b=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//1.\u5B57\u7B26\u578B\u53D8\u91CF\u521B\u5EFA\u65B9\u5F0F</span>
  <span class="token keyword">char</span> ch <span class="token operator">=</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> ch <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token comment">//2.\u5B57\u7B26\u578B\u53D8\u91CF\u6240\u5360\u7684\u5185\u5B58\u5927\u5C0F</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B57\u7B26\u578B\u5360\u7528\u5B57\u8282\u957F\u5EA6\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token comment">//3.\u5B57\u7B26\u578B\u53D8\u91CF\u5E38\u89C1\u9519\u8BEF</span>
  <span class="token comment">//char ch2 = &quot;n&quot;; // \u521B\u5EFA\u5B57\u7B26\u578B\u53D8\u91CF\u5FC5\u987B\u4E3A\u5355\u5F15\u53F7</span>
  <span class="token comment">//char ch2 = &quot;naaaa&quot;; // \u521B\u5EFA\u5B57\u7B26\u578B\u53D8\u91CF\uFF0C\u5355\u5F15\u53F7\u5185\u53EA\u80FD\u6709\u4E00\u4E2A\u5B57\u7B26</span>

  <span class="token comment">//4.\u5B57\u7B26\u578B\u53D8\u91CF\u5BF9\u5E94ASCII\u7F16\u7801</span>
  <span class="token comment">//a - 97</span>
  <span class="token comment">//A - 65</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ch <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8F6C\u79FB\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u79FB\u5B57\u7B26" aria-hidden="true">#</a> \u8F6C\u79FB\u5B57\u7B26</h3><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u6807\u8BC6\u4E00\u4E9B<strong>\u4E0D\u80FD\u663E\u793A\u51FA\u6765\u7684 ASCII \u5B57\u7B26</strong> \u73B0\u9636\u6BB5\u5E38\u7528\u8F6C\u4E49\u5B57\u7B26\u6709\uFF1A<code>\\n \\\\ \\t</code></p><table><thead><tr><th>\u8F6C\u4E49\u5B57\u7B26</th><th>\u542B\u4E49</th><th>ASCII \u7801\u503C\uFF08\u5341\u8FDB\u5236\uFF09</th></tr></thead><tbody><tr><td>\\a</td><td>\u8B66\u62A5</td><td>007</td></tr><tr><td>\\b</td><td>\u9000\u683C\uFF08BS\uFF09\uFF0C\u5F53\u524D\u4F4D\u7F6E\u79FB\u5230\u524D\u4E00\u5217</td><td>008</td></tr><tr><td>\\f</td><td>\u6362\u9875\uFF08FF\uFF09\uFF0C\u5F53\u524D\u4F4D\u7F6E\u79FB\u5230\u4E0B\u9875\u5F00\u5934</td><td>012</td></tr><tr><td>\\n</td><td>\u6362\u884C(LF)</td><td>010</td></tr><tr><td>\\r</td><td>\u56DE\u8F66(CR)</td><td>013</td></tr><tr><td>\\t</td><td>\u6C34\u5E73\u5236\u8868(HT)</td><td>009</td></tr><tr><td>\\v</td><td>\u5782\u76F4\u5236\u8868(VT)</td><td>011</td></tr><tr><td>\\</td><td>\u53CD\u659C\u6760</td><td>092</td></tr><tr><td>?</td><td>\u95EE\u53F7\u5B57\u7B26</td><td>063</td></tr><tr><td>&#39;</td><td>\u5355\u5F15\u53F7\u5B57\u7B26</td><td>039</td></tr><tr><td>&quot;</td><td>\u53CC\u5F15\u53F7\u5B57\u7B26</td><td>034</td></tr><tr><td>\\0</td><td>\u7A7A\u5B57\u7B26(NULL)</td><td>000</td></tr><tr><td>\\ddd</td><td>\u4EFB\u610F\u5B57\u7B26 \u4E09\u4F4D\u516B\u8FDB\u5236</td><td></td></tr><tr><td>\\xhh</td><td>\u4EFB\u610F\u5B57\u7B26 \u4E8C\u4F4D\u5341\u516D\u8FDB\u5236</td><td></td></tr></tbody></table><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u6362\u884C\u7B26 \\n</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u767D\u65E5\u4F9D\u5C71\u5C3D\\n&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">/*\u5236\u8868\u7B26 /t*/</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u9EC4\u6CB3\u5165\u6D77\u6D41\\t\u3002&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// \u53CD\u659C\u6760</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\\\&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B57\u7B26\u4E32\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u578B" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u578B</h3><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u8868\u793A\u4E00\u4E32\u5B57\u7B26 \u4E24\u79CD\u98CE\u683C</p><ol><li>C \u98CE\u683C\u5B57\u7B26\u4E32 <code>char \u53D8\u91CF\u540D[] = &quot;\u5B57\u7B26\u4E32\u503C&quot;</code></li></ol><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> str1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;C\u98CE\u683C \u5B57\u7B26\u4E32&quot;</span><span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> str1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF1AC \u98CE\u683C\u5B57\u7B26\u4E32\u8981\u7528\u53CC\u5F15\u53F7\u62EC\u8D77\u6765</p><ol start="2"><li>C++\u98CE\u683C\u5B57\u7B26\u4E32 <code>string \u53D8\u91CF\u540D = &quot;\u5B57\u7B26\u4E32\u503C&quot;</code></li></ol><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u5305\u542B\u4E00\u4E2A\u5934\u6587\u4EF6</span>
	string str1 <span class="token operator">=</span> <span class="token string">&quot;C++\u98CE\u683C \u5B57\u7B26\u4E32&quot;</span><span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> str1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E03\u5C14\u7C7B\u578B-bool" tabindex="-1"><a class="header-anchor" href="#\u5E03\u5C14\u7C7B\u578B-bool" aria-hidden="true">#</a> \u5E03\u5C14\u7C7B\u578B bool</h3><p>\u4F5C\u7528\uFF1A\u5E03\u5C14\u6570\u636E\u7C7B\u578B\u4EE3\u8868\u771F\u6216\u5047\u7684\u503C</p><ul><li>true -- \u771F\uFF08\u672C\u8D28 1\uFF09</li><li>false -- \u5047\uFF08\u672C\u8D28 0\uFF09</li></ul><p><strong>bool \u7C7B\u578B\u5360 1 \u5B57\u8282\u5927\u5C0F</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">bool</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> flag <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> flag <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;flag of size:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u636E\u7684\u8F93\u5165" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7684\u8F93\u5165" aria-hidden="true">#</a> \u6570\u636E\u7684\u8F93\u5165</h3><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u4ECE\u952E\u76D8\u83B7\u53D6\u6570\u636E \u5173\u952E\u5B57\uFF1A<code>cin</code> \u8BED\u6CD5:<code>cin &gt;&gt; \u53D8\u91CF</code></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment">//\u6574\u578B\u8F93\u5165</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u6574\u578B\u53D8\u91CF\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">//\u6D6E\u70B9\u578B\u8F93\u5165</span>
	<span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u6D6E\u70B9\u578B\u53D8\u91CF\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> d<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> d <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">//\u5B57\u7B26\u578B\u8F93\u5165</span>
	<span class="token keyword">char</span> ch <span class="token operator">=</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u5B57\u7B26\u578B\u53D8\u91CF\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> ch<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> ch <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">// \u5B57\u7B26\u4E32\u578B</span>
	string str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> str<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> str <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">//\u5E03\u5C14\u578B \u53EA\u8981\u975E0\u7684\u503C\u90FD\u4E3A\u771F</span>
	<span class="token keyword">bool</span> isTrue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> isTrue<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> isTrue <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u8FD0\u7B97\u7B26</h2><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u6267\u884C\u4EE3\u7801\u7684\u8FD0\u7B97</p><table><thead><tr><th>\u8FD0\u7B97\u7B26\u7C7B\u578B</th><th>\u4F5C\u7528</th></tr></thead><tbody><tr><td>\u7B97\u672F\u8FD0\u7B97\u7B26</td><td>\u7528\u4E8E\u5904\u7406\u56DB\u5219\u8FD0\u7B97</td></tr><tr><td>\u8D4B\u503C\u8FD0\u7B97\u7B26</td><td>\u7528\u4E8E\u5C06\u8868\u8FBE\u5F0F\u7684\u503C\u8D4B\u503C\u7ED9\u53D8\u91CF</td></tr><tr><td>\u6BD4\u8F83\u8FD0\u7B97\u7B26</td><td>\u7528\u4E8E\u8868\u8FBE\u5F0F\u6BD4\u8F83\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u771F\u503C\u6216\u5047\u503C</td></tr><tr><td>\u903B\u8F91\u8FD0\u7B97\u7B26</td><td>\u7528\u4E8E\u6839\u636E\u8868\u8FBE\u5F0F\u7684\u503C\u8FD4\u56DE\u771F\u503C\u6216\u5047\u503C</td></tr></tbody></table><h3 id="\u7B97\u672F\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u7B97\u672F\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u7B97\u672F\u8FD0\u7B97\u7B26</h3><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u5904\u7406\u56DB\u5219\u8FD0\u7B97</p><table><thead><tr><th>\u8FD0\u7B97\u7B26</th><th>\u672F\u8BED</th><th>\u793A\u4F8B</th></tr></thead><tbody><tr><td>+</td><td>\u628A\u4E24\u4E2A\u64CD\u4F5C\u6570\u76F8\u52A0</td><td>A + B \u5C06\u5F97\u5230 30</td></tr><tr><td>-</td><td>\u4ECE\u7B2C\u4E00\u4E2A\u64CD\u4F5C\u6570\u4E2D\u51CF\u53BB\u7B2C\u4E8C\u4E2A\u64CD\u4F5C\u6570</td><td>A - B \u5C06\u5F97\u5230 -10</td></tr><tr><td>_</td><td>\u628A\u4E24\u4E2A\u64CD\u4F5C\u6570\u76F8\u4E58</td><td>A _ B \u5C06\u5F97\u5230 200</td></tr><tr><td>/</td><td>\u5206\u5B50\u9664\u4EE5\u5206\u6BCD</td><td>B / A \u5C06\u5F97\u5230 2</td></tr><tr><td>%</td><td>\u53D6\u6A21\u8FD0\u7B97\u7B26\uFF0C\u6574\u9664\u540E\u7684\u4F59\u6570</td><td>B % A \u5C06\u5F97\u5230 0</td></tr><tr><td>++</td><td>\u81EA\u589E\u8FD0\u7B97\u7B26\uFF0C\u6574\u6570\u503C\u589E\u52A0</td><td>1 A++ \u5C06\u5F97\u5230 11</td></tr><tr><td>--</td><td>\u81EA\u51CF\u8FD0\u7B97\u7B26\uFF0C\u6574\u6570\u503C\u51CF\u5C11</td><td>1 A-- \u5C06\u5F97\u5230 9</td></tr></tbody></table><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u6574\u578B\u8F93\u5165</span>
	<span class="token keyword">int</span> a1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b1 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> a1 <span class="token operator">+</span> b1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> a1 <span class="token operator">-</span> b1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> a1 <span class="token operator">*</span> b1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u4E24\u4E2A\u6574\u6570\u76F8\u9664\uFF0CC++\u4E2D\u81EA\u52A8\u820D\u5F03\u5C0F\u6570\uFF0C\u8FD4\u56DE\u4E3A\u6574\u6570</span>
	cout <span class="token operator">&lt;&lt;</span> a1 <span class="token operator">/</span> b1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> a1 <span class="token operator">%</span> b1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>


	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9012\u589E++</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 1.\u524D\u7F6E\u9012\u589E</span>
	<span class="token keyword">int</span> aa <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;aa=&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">++</span>aa <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// 2.\u540E\u7F6E\u9012\u589E</span>
	<span class="token keyword">int</span> bb <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;bb=&quot;</span> <span class="token operator">&lt;&lt;</span> bb<span class="token operator">++</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// 3.\u524D\u7F6E\u548C\u540E\u7F6E\u7684\u533A\u522B</span>
	<span class="token comment">//\u524D\u7F6E\u9012\u589E\u5148\u8BA9\u53D8\u91CF +1 \u7136\u540E\u8FDB\u884C\u8868\u8FBE\u5F0F\u8FD0\u7B97</span>
	<span class="token keyword">int</span> a2 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b2 <span class="token operator">=</span> <span class="token operator">++</span>a2 <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a2=&quot;</span> <span class="token operator">&lt;&lt;</span> a2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b2=&quot;</span> <span class="token operator">&lt;&lt;</span> b2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">//\u540E\u7F6E\u9012\u589E\u5148\u8FDB\u884C\u8868\u8FBE\u5F0F\u8FD0\u7B97\uFF0C\u540E\u8BA9\u53D8\u91CF+1</span>
	<span class="token keyword">int</span> a3 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b3 <span class="token operator">=</span> a3<span class="token operator">++</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a3=&quot;</span> <span class="token operator">&lt;&lt;</span> a3 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b3=&quot;</span> <span class="token operator">&lt;&lt;</span> b3 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8D4B\u503C\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u8D4B\u503C\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u8D4B\u503C\u8FD0\u7B97\u7B26</h3><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u5C06\u8868\u8FBE\u5F0F\u7684\u503C\u8D4B\u503C\u7ED9\u53D8\u91CF</p><table><thead><tr><th>\u8FD0\u7B97\u7B26</th><th>\u63CF\u8FF0</th><th>\u5B9E\u4F8B</th></tr></thead><tbody><tr><td>=</td><td>\u7B80\u5355\u7684\u8D4B\u503C\u8FD0\u7B97\u7B26\uFF0C\u628A\u53F3\u8FB9\u64CD\u4F5C\u6570\u7684\u503C\u8D4B\u7ED9\u5DE6\u8FB9\u64CD\u4F5C\u6570</td><td>C = A + B \u5C06\u628A A + B \u7684\u503C\u8D4B\u7ED9 C</td></tr><tr><td>+=</td><td>\u52A0\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26\uFF0C\u628A\u53F3\u8FB9\u64CD\u4F5C\u6570\u52A0\u4E0A\u5DE6\u8FB9\u64CD\u4F5C\u6570\u7684\u7ED3\u679C\u8D4B\u503C\u7ED9\u5DE6\u8FB9\u64CD\u4F5C\u6570</td><td>C += A \u76F8\u5F53\u4E8E C = C + A</td></tr><tr><td>-=</td><td>\u51CF\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26\uFF0C\u628A\u5DE6\u8FB9\u64CD\u4F5C\u6570\u51CF\u53BB\u53F3\u8FB9\u64CD\u4F5C\u6570\u7684\u7ED3\u679C\u8D4B\u503C\u7ED9\u5DE6\u8FB9\u64CD\u4F5C\u6570</td><td>C -= A \u76F8\u5F53\u4E8E C = C -A</td></tr><tr><td>_=</td><td>\u4E58\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26\uFF0C\u628A\u53F3\u8FB9\u64CD\u4F5C\u6570\u4E58\u4EE5\u5DE6\u8FB9\u64CD\u4F5C\u6570\u7684\u7ED3\u679C\u8D4B\u503C\u7ED9\u5DE6\u8FB9\u64CD\u4F5C\u6570</td><td>C _= A \u76F8\u5F53\u4E8E C = C * A</td></tr><tr><td>/=</td><td>\u9664\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26\uFF0C\u628A\u5DE6\u8FB9\u64CD\u4F5C\u6570\u9664\u4EE5\u53F3\u8FB9\u64CD\u4F5C\u6570\u7684\u7ED3\u679C\u8D4B\u503C\u7ED9\u5DE6\u8FB9\u64CD\u4F5C\u6570</td><td>C /= A \u76F8\u5F53\u4E8E C = C / A</td></tr><tr><td>%=</td><td>\u6C42\u6A21\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26\uFF0C\u6C42\u4E24\u4E2A\u64CD\u4F5C\u6570\u7684\u6A21\u8D4B\u503C\u7ED9\u5DE6\u8FB9\u64CD\u4F5C\u6570</td><td>C %= A \u76F8\u5F53\u4E8E C = C % A</td></tr><tr><td>&lt;&lt;=</td><td>\u5DE6\u79FB\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26</td><td>C &lt;&lt;= 2 \u7B49\u540C\u4E8E C = C &lt;&lt; 2</td></tr><tr><td>&gt;&gt;=</td><td>\u53F3\u79FB\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26</td><td>C &gt;&gt;= 2 \u7B49\u540C\u4E8E C = C &gt;&gt; 2</td></tr><tr><td>&amp;=</td><td>\u6309\u4F4D\u4E0E\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26</td><td>C &amp;= 2 \u7B49\u540C\u4E8E C = C &amp; 2</td></tr><tr><td>^=</td><td>\u6309\u4F4D\u5F02\u6216\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26</td><td>C ^= 2 \u7B49\u540C\u4E8E C = C ^ 2</td></tr><tr><td></td><td>=</td><td>\u6309\u4F4D\u6216\u4E14\u8D4B\u503C\u8FD0\u7B97\u7B26</td></tr></tbody></table><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 1. =</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// 2. +=</span>
	a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	a <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// a = a + 2</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// 3. -=</span>
	a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	a <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// a = a - 2</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// 4. *=</span>
	a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	a <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// a = a * 2</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// 5. /=</span>
	a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	a <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// a = a / 2</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5173\u7CFB\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5173\u7CFB\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5173\u7CFB\u8FD0\u7B97\u7B26</h3><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u8868\u8FBE\u5F0F\u6BD4\u8F83\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u771F\u503C\u6216\u5047\u503C \u5047\u8BBE\u53D8\u91CF A \u7684\u503C\u4E3A 10\uFF0C\u53D8\u91CF B \u7684\u503C\u4E3A 20\uFF0C\u5219\uFF1A</p><table><thead><tr><th>\u8FD0\u7B97\u7B26</th><th>\u63CF\u8FF0</th><th>\u5B9E\u4F8B</th></tr></thead><tbody><tr><td>==</td><td>\u68C0\u67E5\u4E24\u4E2A\u64CD\u4F5C\u6570\u7684\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u5982\u679C\u76F8\u7B49\u5219\u6761\u4EF6\u4E3A\u771F\u3002</td><td>(A == B) \u4E0D\u4E3A\u771F\u3002</td></tr><tr><td>!=</td><td>\u68C0\u67E5\u4E24\u4E2A\u64CD\u4F5C\u6570\u7684\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u5982\u679C\u4E0D\u76F8\u7B49\u5219\u6761\u4EF6\u4E3A\u771F\u3002</td><td>(A != B) \u4E3A\u771F\u3002</td></tr><tr><td>&gt;</td><td>\u68C0\u67E5\u5DE6\u64CD\u4F5C\u6570\u7684\u503C\u662F\u5426\u5927\u4E8E\u53F3\u64CD\u4F5C\u6570\u7684\u503C\uFF0C\u5982\u679C\u662F\u5219\u6761\u4EF6\u4E3A\u771F\u3002</td><td>(A &gt; B) \u4E0D\u4E3A\u771F\u3002</td></tr><tr><td>&lt;</td><td>\u68C0\u67E5\u5DE6\u64CD\u4F5C\u6570\u7684\u503C\u662F\u5426\u5C0F\u4E8E\u53F3\u64CD\u4F5C\u6570\u7684\u503C\uFF0C\u5982\u679C\u662F\u5219\u6761\u4EF6\u4E3A\u771F\u3002</td><td>(A &lt; B) \u4E3A\u771F\u3002</td></tr><tr><td>&gt;=</td><td>\u68C0\u67E5\u5DE6\u64CD\u4F5C\u6570\u7684\u503C\u662F\u5426\u5927\u4E8E\u6216\u7B49\u4E8E\u53F3\u64CD\u4F5C\u6570\u7684\u503C\uFF0C\u5982\u679C\u662F\u5219\u6761\u4EF6\u4E3A\u771F\u3002</td><td>(A &gt;= B) \u4E0D\u4E3A\u771F\u3002</td></tr><tr><td>&lt;=</td><td>\u68C0\u67E5\u5DE6\u64CD\u4F5C\u6570\u7684\u503C\u662F\u5426\u5C0F\u4E8E\u6216\u7B49\u4E8E\u53F3\u64CD\u4F5C\u6570\u7684\u503C\uFF0C\u5982\u679C\u662F\u5219\u6761\u4EF6\u4E3A\u771F\u3002</td><td>(A &lt;= B) \u4E3A\u771F\u3002</td></tr></tbody></table><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u76F8\u7B49&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E0D\u76F8\u7B49&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&lt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;&lt;=\u6210\u7ACB&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u903B\u8F91\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u903B\u8F91\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u903B\u8F91\u8FD0\u7B97\u7B26</h3><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u6839\u636E\u8868\u8FBE\u5F0F\u7684\u503C\u8FD4\u56DE\u771F\u503C\u6216\u5047\u503C \u5047\u8BBE\u53D8\u91CF A \u7684\u503C\u4E3A 1\uFF0C\u53D8\u91CF B \u7684\u503C\u4E3A 0\uFF0C\u5219\uFF1A</p><table><thead><tr><th>\u8FD0\u7B97\u7B26</th><th>\u63CF\u8FF0</th><th>\u5B9E\u4F8B</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>\u79F0\u4E3A\u903B\u8F91\u4E0E\u8FD0\u7B97\u7B26\u3002\u5982\u679C\u4E24\u4E2A\u64CD\u4F5C\u6570\u90FD true\uFF0C\u5219\u6761\u4EF6\u4E3A true</td><td>(A &amp;&amp; B) \u4E3A false</td></tr><tr><td></td><td></td><td></td></tr><tr><td>!</td><td>\u79F0\u4E3A\u903B\u8F91\u975E\u8FD0\u7B97\u7B26\u3002\u7528\u6765\u9006\u8F6C\u64CD\u4F5C\u6570\u7684\u903B\u8F91\u72B6\u6001\uFF0C\u5982\u679C\u6761\u4EF6\u4E3A true \u5219\u903B\u8F91\u975E\u8FD0\u7B97\u7B26\u5C06\u4F7F\u5176\u4E3A false</td><td>!(A &amp;&amp; B) \u4E3A true</td></tr></tbody></table><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> c<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Line 1 - \u6761\u4EF6\u4E3A\u771F&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">||</span> b<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Line 2 - \u6761\u4EF6\u4E3A\u771F&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* \u6539\u53D8 a \u548C b \u7684\u503C */</span>
  a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Line 3 - \u6761\u4EF6\u4E3A\u771F&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span>
  <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Line 4 - \u6761\u4EF6\u4E0D\u4E3A\u771F&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>a <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Line 5 - \u6761\u4EF6\u4E3A\u771F&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7A0B\u5E8F\u6D41\u7A0B\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u7A0B\u5E8F\u6D41\u7A0B\u7ED3\u6784" aria-hidden="true">#</a> \u7A0B\u5E8F\u6D41\u7A0B\u7ED3\u6784</h2><p>C/C++\u652F\u6301\u6700\u57FA\u7840\u7684\u4E09\u79CD\u7A0B\u5E8F\u7ED3\u6784\uFF1A\u987A\u5E8F\u7ED3\u6784\u3001\u9009\u62E9\u7ED3\u6784\u3001\u5FAA\u73AF\u7ED3\u6784</p><ul><li>\u987A\u5E8F\u7ED3\u6784\uFF1A\u6309\u7167\u987A\u5E8F\u6267\u884C\uFF0C\u4E0D\u53D1\u751F\u8DF3\u8F6C</li><li>\u9009\u62E9\u7ED3\u6784\uFF1A\u6839\u636E\u6761\u4EF6\u662F\u5426\u6EE1\u8DB3\uFF0C\u6709\u9009\u62E9\u7684\u6267\u884C\u76F8\u5E94\u7684\u7A0B\u5E8F</li><li>\u5FAA\u73AF\u7ED3\u6784\uFF1A\u6839\u636E\u6761\u4EF6\u662F\u5426\u6EE1\u8DB3\uFF0C\u5FAA\u73AF\u591A\u6B21\u6267\u884C\u67D0\u6BB5\u4EE3\u7801</li></ul><h3 id="\u9009\u62E9\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u7ED3\u6784" aria-hidden="true">#</a> \u9009\u62E9\u7ED3\u6784</h3><h4 id="if-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#if-\u8BED\u53E5" aria-hidden="true">#</a> if \u8BED\u53E5</h4><p>\u4F5C\u7528\u6267\u884C\uFF1A\u6EE1\u8DB3\u6761\u4EF6\u7684\u8BED\u53E5 if \u8BED\u53E5\u4E09\u79CD\u5F62\u5F0F\uFF1A</p><ol><li>\u5355\u884C\u683C\u5F0F if \u8BED\u53E5</li><li>\u591A\u884C\u683C\u5F0F if \u8BED\u53E5</li><li>\u591A\u6761\u4EF6\u7684 if \u8BED\u53E5</li><li>\u5D4C\u5957 if \u8BED\u53E5</li></ol><p><strong>1. \u5355\u884C\u683C\u5F0F if \u8BED\u53E5\uFF1A<code>if(\u6761\u4EF6){\u6761\u4EF6\u6EE1\u8DB3\u6267\u884C\u7684\u8BED\u53E5}</code></strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*
  \u9009\u62E9\u7ED3\u6784-\u5355\u884Cif\u8BED\u53E5
  \u8F93\u5165\u4E00\u4E2A\u5206\u6570\u3001\u5206\u6570\u5927\u4E8E60\u5206\u89C6\u4E3A\u53CA\u683C
  */</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u63D0\u793A\uFF1A\u8F93\u5165\u4E00\u4E2A\u5206\u6570\u3001\u5206\u6570\u5927\u4E8E60\u5206\u89C6\u4E3A\u53CA\u683C&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u4E00\u4E2A\u5206\u6570&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cin <span class="token operator">&gt;&gt;</span> score<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u5206\u6570\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u606D\u559C\u8003\u8BD5\u53CA\u683C\uFF0C\u8003\u8BD5\u6210\u7EE9\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. \u591A\u884C\u683C\u5F0F if \u8BED\u53E5\uFF1A<code>if(\u6761\u4EF6){\u6761\u4EF6\u6EE1\u8DB3\u6267\u884C\u7684\u8BED\u53E5} else {\u6761\u4EF6\u4E0D\u6EE1\u8DB3\u7684\u8BED\u53E5}</code></strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*
  \u9009\u62E9\u7ED3\u6784-\u5355\u884Cif\u8BED\u53E5
  \u8F93\u5165\u4E00\u4E2A\u5206\u6570\u3001\u5206\u6570\u5927\u4E8E60\u5206\u89C6\u4E3A\u53CA\u683C
  */</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u63D0\u793A\uFF1A\u8F93\u5165\u4E00\u4E2A\u5206\u6570\u3001\u5206\u6570\u5927\u4E8E60\u5206\u89C6\u4E3A\u53CA\u683C&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u4E00\u4E2A\u5206\u6570&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cin <span class="token operator">&gt;&gt;</span> score<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u5206\u6570\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u606D\u559C\u8003\u8BD5\u53CA\u683C\uFF0C\u8003\u8BD5\u6210\u7EE9\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8003\u8BD5\u4E0D\u53CA\u683C\uFF0C\u8003\u8BD5\u6210\u7EE9\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. \u591A\u6761\u4EF6\u7684 if \u8BED\u53E5\uFF1A<code>if(\u6761\u4EF61){\u6761\u4EF61\u6EE1\u8DB3\u6267\u884C\u7684\u8BED\u53E5} else if (\u6761\u4EF62) {\u6761\u4EF62\u6EE1\u8DB3\u6267\u884C\u7684\u8BED\u53E5} else {\u6761\u4EF6\u4E0D\u6EE1\u8DB3\u7684\u8BED\u53E5}</code></strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*
  \u9009\u62E9\u7ED3\u6784-\u5355\u884Cif\u8BED\u53E5
  \u8F93\u5165\u4E00\u4E2A\u5206\u6570\u3001\u5206\u6570\u5927\u4E8E60\u5206\u89C6\u4E3A\u53CA\u683C
  */</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u63D0\u793A\uFF1A\u8F93\u5165\u4E00\u4E2A\u5206\u6570\u3001\u5206\u6570\u5927\u4E8E60\u5206\u89C6\u4E3A\u53CA\u683C&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u4E00\u4E2A\u5206\u6570&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cin <span class="token operator">&gt;&gt;</span> score<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u5206\u6570\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;=</span> <span class="token number">85</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u606D\u559C\u8003\u8BD5\u53CA\u683C,\u8BC4\u5B9A\u4E3A\u4F18\u79C0\uFF0C\u8003\u8BD5\u6210\u7EE9\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u606D\u559C\u8003\u8BD5\u53CA\u683C\uFF0C\u8003\u8BD5\u6210\u7EE9\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8003\u8BD5\u4E0D\u53CA\u683C\uFF0C\u8003\u8BD5\u6210\u7EE9\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. \u5D4C\u5957 if \u8BED\u53E5\uFF1A</strong> \u8BED\u6CD5\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">if</span><span class="token punctuation">(</span> boolean_expression <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   <span class="token comment">// \u5F53\u5E03\u5C14\u8868\u8FBE\u5F0F 1 \u4E3A\u771F\u65F6\u6267\u884C</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>boolean_expression <span class="token number">2</span><span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u5E03\u5C14\u8868\u8FBE\u5F0F 2 \u4E3A\u771F\u65F6\u6267\u884C</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   <span class="token comment">// \u5C40\u90E8\u53D8\u91CF\u58F0\u660E</span>
   <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>

   <span class="token comment">// \u68C0\u67E5\u5E03\u5C14\u6761\u4EF6</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span> a <span class="token operator">==</span> <span class="token number">100</span> <span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
       <span class="token comment">// \u5982\u679C\u6761\u4EF6\u4E3A\u771F\uFF0C\u5219\u68C0\u67E5\u4E0B\u9762\u7684\u6761\u4EF6</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span> b <span class="token operator">==</span> <span class="token number">200</span> <span class="token punctuation">)</span>
       <span class="token punctuation">{</span>
          <span class="token comment">// \u5982\u679C\u6761\u4EF6\u4E3A\u771F\uFF0C\u5219\u8F93\u51FA\u4E0B\u9762\u7684\u8BED\u53E5</span>
          cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a \u7684\u503C\u662F 100\uFF0C\u4E14 b \u7684\u503C\u662F 200&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a \u7684\u51C6\u786E\u503C\u662F &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
   cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b \u7684\u51C6\u786E\u503C\u662F &quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

   <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E09\u76EE\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4E09\u76EE\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u4E09\u76EE\u8FD0\u7B97\u7B26</h4><p>\u4F5C\u7528\uFF1A\u901A\u8FC7\u4E09\u76EE\u8FD0\u7B97\u7B26\u5B9E\u73B0\u7B80\u5355\u7684\u5224\u65AD \u8BED\u6CD5\uFF1A<code>\u8868\u8FBE\u5F0F1 ? \u8868\u8FBE\u5F0F2 : \u8868\u8FBE\u5F0F3</code> \u8868\u8FBE\u5F0F 1 \u4E3A\u771F\u3001\u6267\u884C\u8868\u8FBE\u5F0F 2\uFF0C\u5E76\u8FD4\u56DE\u8868\u8FBE\u5F0F 2 \u7684\u7ED3\u679C \u8868\u8FBE\u5F0F 1 \u4E3A\u5047\u3001\u6267\u884C\u8868\u8FBE\u5F0F 3\uFF0C\u5E76\u8FD4\u56DE\u8868\u8FBE\u5F0F 3 \u7684\u7ED3\u679C</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  c <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> c <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token comment">//C++\u4E2D\u4E09\u76EE\u8FD0\u7B97\u7B26\u8FD4\u56DE\u7684\u662F\u53D8\u91CF\u53EF\u4EE5\u7EE7\u7EED\u8D4B\u503C</span>
  <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b=&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="switch-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#switch-\u8BED\u53E5" aria-hidden="true">#</a> switch \u8BED\u53E5</h4><p>\u4F5C\u7528\uFF1A\u6267\u884C\u591A\u6761\u4EF6\u5206\u652F\u8BED\u53E5</p><p><strong>if \u548C switch \u533A\u522B\uFF1F</strong> switch \u7F3A\u70B9\u3001\u5224\u65AD\u65F6\u53EA\u80FD\u662F\u6574\u578B\u6216\u8005\u5B57\u7B26\u4E32\uFF0C\u4E0D\u53EF\u4EE5\u662F\u4E00\u4E2A\u533A\u95F4 switch \u4F18\u70B9\u3001\u7ED3\u6784\u6E05\u6670\uFF0C\u6267\u884C\u6548\u7387\u9AD8</p><p><strong>\u6CE8\u610F:</strong><code>case</code> \u4E2D\u5FC5\u987B\u5199<code>break</code><strong>\u8BED\u6CD5\uFF1A</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">switch</span><span class="token punctuation">(</span>expression<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">case</span> constant<span class="token operator">-</span>expression  <span class="token operator">:</span>
       <span class="token function">statement</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u9009\u7684</span>
    <span class="token keyword">case</span> constant<span class="token operator">-</span>expression  <span class="token operator">:</span>
       <span class="token function">statement</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u9009\u7684</span>

    <span class="token comment">// \u60A8\u53EF\u4EE5\u6709\u4EFB\u610F\u6570\u91CF\u7684 case \u8BED\u53E5</span>
    <span class="token keyword">default</span> <span class="token operator">:</span> <span class="token comment">// \u53EF\u9009\u7684</span>
       <span class="token function">statement</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> grade <span class="token operator">=</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u7535\u5F71\u300A\u529F\u592B\u300B\u8BC4\u5206\uFF0C\u9ED8\u8BA4\u8BC4\u4EF7\u4E3AA&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//cin \u7528\u6237\u8F93\u5165</span>
	cin <span class="token operator">&gt;&gt;</span> grade<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u5BF9\u7535\u5F71\u300A\u529F\u592B\u300B\u7684\u8BC4\u5206\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> grade <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token keyword">switch</span> <span class="token punctuation">(</span>grade<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token char">&#39;A&#39;</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u7ECF\u5178\u7684\u7535\u5F71&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// \u9000\u51FA\u5F53\u524D\u5206\u652F</span>
	<span class="token keyword">case</span> <span class="token char">&#39;B&#39;</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5F88\u597D\u7684\u7535\u5F71&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token char">&#39;C&#39;</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8FD8\u884C\u7684\u7535\u5F71&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token char">&#39;D&#39;</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u51D1\u5408\u7684\u7535\u5F71&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">default</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u70C2\u7247&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FAA\u73AF\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF\u7ED3\u6784" aria-hidden="true">#</a> \u5FAA\u73AF\u7ED3\u6784</h3><h4 id="while-\u5FAA\u73AF\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#while-\u5FAA\u73AF\u8BED\u53E5" aria-hidden="true">#</a> while \u5FAA\u73AF\u8BED\u53E5</h4><p>\u4F5C\u7528\uFF1A\u6EE1\u8DB3\u5FAA\u73AF\u6761\u4EF6\u3001\u6267\u884C\u5FAA\u73AF\u8BED\u53E5 \u8BED\u6CD5\uFF1A<code>while(\u5FAA\u73AF\u6761\u4EF6){\u5FAA\u73AF\u8BED\u53E5}</code> \u89E3\u91CA\uFF1A\u53EA\u8981\u5FAA\u73AF\u6761\u4EF6\u7684\u7ED3\u679C\u4E3A\u771F\uFF0C\u5C31\u6267\u884C\u5FAA\u73AF\u8BED\u53E5</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5728\u5C4F\u5E55\u4E2D\u6253\u5370 0~9\u8FD9\u662F\u4E2A\u6570\u5B57</span>
	<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> num <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5FAA\u73AF\u6570\u636E\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> num <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		num<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>while \u5FAA\u73AF\u7EC3\u4E60\u6848\u4F8B\uFF1A\u731C\u6570\u5B57</strong> \u6848\u4F8B\u63CF\u8FF0\uFF1A\u7CFB\u7EDF\u968F\u673A\u751F\u6210\u4E00\u4E2A 1~100 \u4E4B\u95F4\u7684\u6570\u5B57\uFF0C\u73A9\u5BB6\u8FDB\u884C\u731C\u6D4B\uFF0C\u5982\u679C\u731C\u9519\u63D0\u793A\u73A9\u5BB6\u8FC7\u5927\u6216\u8FC7\u5C0F\uFF0C\u5982\u679C\u731C\u5BF9\u606D\u559C\u73A9\u5BB6\u80DC\u5229\uFF0C\u5E76\u9000\u51FA\u6E38\u620F</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctime&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u6DFB\u52A0\u968F\u673A\u6570\u79CD\u5B50\uFF0C\u5229\u7528\u5F53\u524D\u7CFB\u7EDF\u65F6\u95F4\u751F\u6210\u968F\u673A\u6570\uFF0C\u9632\u6B62\u6BCF\u6B21\u968F\u673A\u6570\u4E00\u6837</span>
	<span class="token function">srand</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//1. \u7CFB\u7EDF\u751F\u6210\u968F\u673A\u6570</span>
	<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// rand()%100 + 1 \u751F\u6210 0~99 + 1\u7684\u968F\u673A\u6570</span>
	<span class="token comment">//2. \u73A9\u5BB6\u8FDB\u884C\u731C\u6D4B</span>
	<span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u73A9\u5BB6\u8F93\u5165\u7684\u6570\u636E</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u6570\u5B57\u8FDB\u884C1~100\u968F\u673A\u6570\uFF0C\u731C\u6570\u6E38\u620F&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cin <span class="token operator">&gt;&gt;</span> val<span class="token punctuation">;</span>
		<span class="token comment">//3. \u5224\u65AD\u73A9\u5BB6\u8FDB\u884C\u731C\u6D4B</span>
		<span class="token comment">// \u731C\u9519 \u63D0\u793A\u731C\u9519\u7684\u7ED3\u679C\uFF0C\u8FC7\u5927\u6216\u8005\u8FC7\u5C0F \u91CD\u65B0\u8FD4\u56DE\u7B2C2\u6B65</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u6570\u5B57\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> val <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;_______\u731C\u6D4B\u8FC7\u5927&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u6570\u5B57\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> val <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;_______\u731C\u6D4B\u8FC7\u5C0F&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u6570\u5B57\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> val <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;_______\u731C\u6D4B\u5BF9\u4E86&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// // \u731C\u5BF9 \u9000\u51FA\u5FAA\u73AF</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="do-while-\u5FAA\u73AF\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#do-while-\u5FAA\u73AF\u8BED\u53E5" aria-hidden="true">#</a> do...while \u5FAA\u73AF\u8BED\u53E5</h4><p>\u4F5C\u7528\uFF1A\u6EE1\u8DB3\u5FAA\u73AF\u6761\u4EF6\u3001\u6267\u884C\u5FAA\u73AF\u8BED\u53E5 \u8BED\u6CD5\uFF1A<code>do{\u5FAA\u73AF\u8BED\u53E5}while(\u5FAA\u73AF\u6761\u4EF6)</code> \u6CE8\u610F\uFF1A\u4E0E while \u7684\u533A\u522B\u5728\u4E8E do...while \u4F1A\u5148\u6267\u884C\u4E00\u6B21\u5FAA\u73AF\u8BED\u53E5\uFF0C\u518D\u5224\u65AD\u5FAA\u73AF\u6761\u4EF6</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctime&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">do</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> num <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		num<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>do...while \u5FAA\u73AF\u7EC3\u4E60\u6848\u4F8B\uFF1A\u6C34\u4ED9\u82B1\u6570</strong> \u6848\u4F8B\u63CF\u8FF0\uFF1A\u6C34\u4ED9\u82B1\u6570\u662F\u6307\u4E00\u4E2A 3 \u4F4D\u6570\uFF0C\u5B83\u7684\u6BCF\u4E2A\u4F4D\u4E0A\u7684\u6570\u5B57\u7684 3 \u6B21\u5E42\u4E4B\u548C\u7B49\u4E8E\u5B83\u672C\u8EAB,\u6C42\u51FA\u6240\u6709 3 \u4F4D\u6570\u4E2D\u7684\u6C34\u4ED9\u82B1\u6570 \u4F8B\u5982\uFF1A1^3+5^3+3^3 = 153</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u6240\u6709\u4E09\u4F4D\u6570 100~999</span>
	<span class="token comment">/*
	153
	1*1*1 = 1
	5*5*5 = 125
	3*3*3 = 27
	\u5728\u6240\u6709\u4E09\u4F4D\u6570\u4E2D\u627E\u6C34\u4ED9\u82B1\u6570
	\u83B7\u53D6\u4E2A\u4F4D 153%10 = 3
	\u83B7\u53D6\u5341\u4F4D 153/10 = 15    15%10 = 5 \u5148\u6574\u966410\u5F97\u5230\u4E24\u4F4D\u6570\uFF0C\u518D\u53D6\u6A21\u4E8E10\u5F97\u5230\u5341\u4F4D
	\u83B7\u53D6\u767E\u4F4D 153/100 = 1		\u76F4\u63A5\u6574\u9664100\uFF0C\u83B7\u53D6\u767E\u4F4D
	*/</span>
	<span class="token comment">//\u5224\u65AD\u4E2A\u4F4D^3 + \u5341\u4F4D^3 + \u767E\u4F4D^3 == \u672C\u8EAB</span>

	<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
	<span class="token keyword">do</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// \u5982\u679C\u662F\u6C34\u4ED9\u82B1\u6570\u624D\u6253\u5370</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u4E2A\u4F4D</span>
		<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u5341\u4F4D</span>
		<span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u767E\u4F4D</span>
		a <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u6570\u5B57\u4E2A\u4F4D</span>
		b <span class="token operator">=</span> num <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u6570\u5B57\u5341\u4F4D</span>
		c <span class="token operator">=</span> num <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u6570\u5B57\u7684\u767E\u4F4D</span>
		<span class="token comment">// \u770B\u662F\u4E0D\u662F\u6C34\u4ED9\u82B1\u6570</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">*</span> a <span class="token operator">*</span> a <span class="token operator">+</span> b <span class="token operator">*</span> b <span class="token operator">*</span> b <span class="token operator">+</span> c <span class="token operator">*</span> c <span class="token operator">*</span> c <span class="token operator">==</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6C34\u4ED9\u82B1\u6570:&quot;</span> <span class="token operator">&lt;&lt;</span> num <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		num<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="for-\u5FAA\u73AF\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#for-\u5FAA\u73AF\u8BED\u53E5" aria-hidden="true">#</a> for \u5FAA\u73AF\u8BED\u53E5</h4><p>\u4F5C\u7528\uFF1A\u6EE1\u8DB3\u5FAA\u73AF\u6761\u4EF6\uFF0C\u6267\u884C\u5FAA\u73AF\u8BED\u53E5 \u8BED\u6CD5\uFF1A<code>for(\u8D77\u59CB\u8868\u8FBE\u5F0F;\u6761\u4EF6\u8868\u8FBE\u5F0F;\u672B\u5C3E\u5FAA\u73AF\u4F53) {\u5FAA\u73AF\u8BED\u53E5}</code></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7EC3\u4E60\u6848\u4F8B\uFF1A\u6572\u684C\u5B50</strong> \u6848\u4F8B\u63CF\u8FF0\uFF1A\u4ECE 1 \u5F00\u59CB\u6570\u5230\u6570\u5B57 100\uFF0C\u5982\u679C\u6570\u5B57\u5404\u4F4D\u542B\u6709 7\uFF0C\u6216\u8005\u6570\u5B57\u5341\u4F4D\u542B\u6709 7\uFF0C\u6216\u8005\u8BF4\u8BE5\u6570\u5B57\u4E3A 7 \u7684\u500D\u6570\uFF0C\u6253\u5370\u6572\u684C\u5B50\uFF0C\u5176\u4ED6\u76F4\u63A5\u6253\u5370\u6570\u5B57\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//int a = i % 7; // 7\u7684\u500D\u6570</span>
		<span class="token comment">//int b = i % 10; // \u4E2A\u4F4D\u67097</span>
		<span class="token comment">//int c = i / 10; // \u5341\u4F4D\u67097</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">7</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> i<span class="token operator">%</span><span class="token number">10</span> <span class="token operator">==</span> <span class="token number">7</span> <span class="token operator">||</span> i<span class="token operator">/</span><span class="token number">10</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;7\u7684\u500D\u6570_\u6572\u684C\u5B50&quot;</span> <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5D4C\u5957\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5D4C\u5957\u5FAA\u73AF" aria-hidden="true">#</a> \u5D4C\u5957\u5FAA\u73AF</h4><p><strong>\u5229\u7528\u5D4C\u5957\u5FAA\u73AF\u6253\u5370 10*10 \u7684\u661F\u4E91\u56FE\u5F62</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;* &quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5229\u7528\u5D4C\u5957\u5FAA\u73AF\u4E5D\u4E5D\u4E58\u6CD5\u8868</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;x&quot;</span> <span class="token operator">&lt;&lt;</span> j <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">&lt;&lt;</span> i <span class="token operator">*</span> j <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8DF3\u8F6C\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u8DF3\u8F6C\u8BED\u53E5" aria-hidden="true">#</a> \u8DF3\u8F6C\u8BED\u53E5</h3><h4 id="break-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#break-\u8BED\u53E5" aria-hidden="true">#</a> break \u8BED\u53E5</h4><p>\u4F5C\u7528\uFF1A\u7528\u4E8E\u8DF3\u51FA\u9009\u62E9\u7ED3\u6784\u6216\u8005\u5FAA\u73AF\u7ED3\u6784 break \u4F7F\u7528\u7684\u65F6\u673A\uFF1A</p><ul><li>\u51FA\u73B0\u518D switch \u6761\u4EF6\u8BED\u53E5\u4E2D\uFF0C\u4F5C\u7528\u662F\u4E2D\u6B62 case \u5E76\u8DF3\u51FA switch</li><li>\u51FA\u73B0\u5728\u5FAA\u73AF\u8BED\u53E5\u4E2D\uFF0C\u4F5C\u7528\u662F\u8DF3\u51FA\u5F53\u524D\u7684\u5FAA\u73AF\u8BED\u53E5</li><li>\u51FA\u73B0\u5728\u5D4C\u5957\u5FAA\u73AF\u4E2D\uFF0C\u8DF3\u51FA\u6700\u8FD1\u7684\u5185\u5C42\u5FAA\u73AF\u8BED\u53E5</li></ul><p><strong>1. \u51FA\u73B0\u5728 switch \u8BED\u53E5\u4E2D</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">// \u51FA\u73B0\u5728 switch \u8BED\u53E5\u4E2D</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u9009\u62E9\u526F\u672C\u96BE\u5EA6&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;1.\u666E\u901A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;2.\u4E2D\u7B49&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;3.\u56F0\u96BE&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

  <span class="token keyword">int</span> select <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u9009\u62E9\u7ED3\u679C\u53D8\u91CF</span>
  cin <span class="token operator">&gt;&gt;</span> select<span class="token punctuation">;</span> <span class="token comment">// \u7B49\u5F85\u7528\u6237\u8F93\u5165</span>

  <span class="token keyword">switch</span> <span class="token punctuation">(</span>select<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u9009\u62E9\u7684\u96BE\u5EA6\u662F\u666E\u901A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u9009\u62E9\u7684\u96BE\u5EA6\u662F\u4E2D\u7B49&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u60A8\u9009\u62E9\u7684\u96BE\u5EA6\u662F\u56F0\u96BE&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. \u51FA\u73B0\u5728\u5FAA\u73AF\u8BED\u53E5\u4E2D</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// \u52305\u9000\u51FA\u5FAA\u73AF</span>
    cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. \u51FA\u73B0\u518D\u5D4C\u5957\u5FAA\u73AF\u8BED\u53E5\u4E2D</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// \u9000\u51FA\u5185\u5C42\u5FAA\u73AF</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;* &quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="continue-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#continue-\u8BED\u53E5" aria-hidden="true">#</a> continue \u8BED\u53E5</h4><p>\u4F5C\u7528\uFF1A\u5728\u5FAA\u73AF\u8BED\u53E5\u4E2D\uFF0C\u8DF3\u8FC7\u672C\u6B21\u5FAA\u73AF\u4E2D\u4F59\u4E0B\u5C1A\u672A\u6267\u884C\u7684\u8BED\u53E5\uFF0C\u7EE7\u7EED\u6267\u884C\u4E0B\u4E00\u6B21\u5FAA\u73AF <strong>continue \u8DF3\u8FC7\u672C\u6B21\u5FAA\u73AF\uFF0Cbreak \u4F1A\u76F4\u63A5\u8DF3\u51FA\u5FAA\u73AF</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u662F\u5076\u6570\u5219\u8DF3\u8FC7\u5FAA\u73AF\uFF0C\u53EA\u6253\u5370\u5947\u6570</span>
		cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="goto-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#goto-\u8BED\u53E5" aria-hidden="true">#</a> goto \u8BED\u53E5</h4><p>\u4F5C\u7528\uFF1A\u53EF\u4EE5\u65E0\u6761\u4EF6\u8DF3\u8F6C\u8BED\u53E5 \u8BED\u6CD5\uFF1A<code>goto \u6807\u8BB0;</code> \u89E3\u91CA\uFF1A\u5982\u679C\u6807\u8BB0\u540D\u79F0\u5B58\u5728\uFF0C\u6267\u884C\u5230<code>goto</code>\u8BED\u53E5\u65F6\uFF0C\u4F1A\u8DF3\u8F6C\u5230\u6807\u8BB0\u7684\u4F4D\u7F6E</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;1.xxxxxxxxx&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">goto</span> FLAG<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;2.xxxxxxxxx&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;3.xxxxxxxxx&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	FLAG<span class="token operator">:</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;4.xxxxxxxxx&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2><h3 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h3><p>\u6240\u8C13\u7684\u6570\u7EC4\uFF0C\u5C31\u662F\u4E00\u4E2A\u96C6\u5408\uFF0C\u91CC\u9762\u5B58\u653E\u4E86\u76F8\u540C\u7C7B\u578B\u7684\u6570\u7EC4\u5143\u7D20</p><ul><li>\u7279\u70B9 1\uFF1A\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A<strong>\u6570\u7EC4\u5143\u7D20\u90FD\u662F\u76F8\u540C\u7684\u6570\u636E\u7C7B\u578B</strong></li><li>\u7279\u70B9 2\uFF1A\u6570\u7EC4\u662F\u7531<strong>\u8FDE\u7EED\u7684\u5185\u5B58\u4F4D\u7F6E</strong>\u7EC4\u6210\u7684</li></ul><h3 id="\u4E00\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E00\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u4E00\u7EF4\u6570\u7EC4</h3><h4 id="\u4E00\u7EF4\u6570\u7EC4\u5B9A\u4E49\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E00\u7EF4\u6570\u7EC4\u5B9A\u4E49\u65B9\u5F0F" aria-hidden="true">#</a> \u4E00\u7EF4\u6570\u7EC4\u5B9A\u4E49\u65B9\u5F0F</h4><p>\u4E00\u7EF4\u6570\u7EC4\u5B9A\u4E49\u7684\u4E09\u79CD\u65B9\u5F0F\uFF1A</p><ol><li><code>\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u6570\u7EC4\u957F\u5EA6];</code></li><li><code>\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u6570\u7EC4\u957F\u5EA6] = {\u503C1,\u503C2,...};</code></li><li><code>\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[] = {\u503C1,\u503C2,...};</code></li></ol><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">//1. \u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u6570\u7EC4\u957F\u5EA6];</span>
	<span class="token keyword">int</span> score<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token comment">// \u6839\u636E\u4E0B\u6807\u8FDB\u884C\u8D4B\u503C</span>
	score<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
	score<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
	<span class="token comment">// \u8BBF\u95EE\u6570\u7EC4\u5143\u7D20</span>
	cout <span class="token operator">&lt;&lt;</span> score<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">//2. \u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u6570\u7EC4\u957F\u5EA6] = { \u503C1,\u503C2,... };</span>
	<span class="token keyword">int</span> balance<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> balance<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token comment">//3. \u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[] = { \u503C1,\u503C2,... };</span>
	<span class="token keyword">char</span> strarr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token char">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E00\u7EF4\u6570\u7EC4\u6570\u7EC4\u540D" tabindex="-1"><a class="header-anchor" href="#\u4E00\u7EF4\u6570\u7EC4\u6570\u7EC4\u540D" aria-hidden="true">#</a> \u4E00\u7EF4\u6570\u7EC4\u6570\u7EC4\u540D</h4><p>\u7528\u9014\uFF1A</p><ol><li>\u7EDF\u8BA1\u6574\u4E2A\u6570\u7EC4\u518D\u5185\u5B58\u4E2D\u7684\u957F\u5EA6</li><li>\u83B7\u53D6\u6570\u7EC4\u518D\u5185\u5B58\u4E2D\u7684\u9996\u5730\u5740</li></ol><p><strong>\u6570\u7EC4\u540D\u662F\u4E00\u4E2A\u5E38\u91CF\uFF0C\u4E0D\u53EF\u4EE5\u91CD\u65B0\u8D4B\u503C\u64CD\u4F5C</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">//1. \u53EF\u4EE5\u83B7\u53D6\u6574\u4E2A\u6570\u7EC4\u5360\u7528\u5185\u5B58\u5927\u5C0F</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6574\u4E2A\u6570\u7EC4\u6240\u5360\u5185\u5B58\u7A7A\u95F4\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6BCF\u4E2A\u5143\u7D20\u6240\u5360\u5185\u5B58\u7A7A\u95F4\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">//2. \u53EF\u4EE5\u901A\u8FC7\u6570\u7EC4\u540D\u83B7\u53D6\u5230\u6570\u7EC4\u9996\u5730\u5740</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6570\u7EC4\u9996\u5730\u5740\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>arr <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u5730\u5740&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6570\u7EC4\u4E2D\u7B2C\u4E8C\u4E2A\u5143\u7D20\u7684\u5730\u5740&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7EC3\u4E60\u6848\u4F8B 1\uFF1A\u4E94\u53EA \u{1F416} \u79F0\u4F53\u91CD</strong> \u6848\u4F8B\u63CF\u8FF0\uFF1A\u5728\u4E00\u4E2A\u6570\u7EC4\u4E2D\u8BB0\u5F55\u4E86\u4E94\u53EA\u5C0F\u732A\u7684\u4F53\u91CD\uFF0C\u5982 int arr[5] = {300,350,200,400,260}; \u6253\u5370\u5E76\u627E\u51FA\u6700\u91CD\u7684\u5C0F\u732A\u4F53\u91CD</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">260</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// \u6700\u5927\u503C\u5927\u4E8E\u9ED8\u8BA4\u6700\u5927\u503C\uFF0C\u8DDF\u65B0\u6700\u5927\u4F53\u91CD</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			max <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6700\u91CD\u7684\u732A\u4F53\u91CD\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> max <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7EC3\u4E60\u6848\u4F8B 2\uFF1A\u6570\u7EC4\u5143\u7D20\u9006\u7F6E</strong> \u6848\u4F8B\u63CF\u8FF0\uFF1A\u6E05\u660E\u4E00\u4E2A 5 \u4E2A\u5143\u7D20\u7684\u6570\u7EC4\uFF0C\u5E76\u4E14\u5C06\u5143\u7D20\u9006\u7F6E\u3002\uFF08\u5982\u539F\u6570\u7EC4\u5143\u7D20\u4E3A\uFF1A1,3,5,2,4 \u9006\u7F6E\u540E\u7684\u7ED3\u679C\u4E3A 4,2,5,3,1\uFF09</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u8D77\u59CB\u4E0B\u6807</span>
	<span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u672B\u5C3E\u5143\u7D20\u4E0B\u6807</span>

	<span class="token comment">// sizeof(arr) / sizeof(arr[0]) \u83B7\u53D6\u4E86\u6570\u7EC4\u957F\u5EA6</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6570\u7EC4\u5143\u7D20\u9006\u7F6E\u524D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// \u5B9E\u73B0\u5143\u7D20\u4E92\u6362</span>
		<span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4E34\u65F6\u6570\u636E</span>
		arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
		arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>

		<span class="token comment">// \u4E0B\u6807\u66F4\u65B0</span>
		start<span class="token operator">++</span><span class="token punctuation">;</span>
		end<span class="token operator">--</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6570\u7EC4\u5143\u7D20\u9006\u7F6E\u540E\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h4><p>\u4F5C\u7528\uFF1A\u6700\u5E38\u7528\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5BF9\u6570\u7EC4\u5185\u5143\u7D20\u8FDB\u884C\u6392\u5E8F</p><ol><li>\u6BD4\u8F83\u76F8\u90BB\u7684\u5143\u7D20\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u6BD4\u7B2C\u4E8C\u4E2A\u5927\uFF0C\u5C31\u4EA4\u6362\u4ED6\u4EEC\u4E24\u4E2A</li><li>\u6BCF\u4E00\u5BF9\u76F8\u90BB\u5143\u7D20\u505A\u540C\u6837\u7684\u5DE5\u4F5C\uFF0C\u6267\u884C\u5B8C\u6BD5\u540E\uFF0C\u627E\u5230\u7B2C\u4E00\u4E2A\u6700\u5927\u503C</li><li>\u91CD\u590D\u4EE5\u4E0A\u7684\u6B65\u9AA4\uFF0C\u6BCF\u6B21\u6BD4\u8F83\u6B21\u6570=1\uFF0C\u76F4\u5230\u4E0D\u9700\u8981\u6BD4\u8F83</li></ol><p>\u793A\u4F8B\uFF1A\u5C06\u6570\u7EC4{4,2,5,8,6,7,89,45,11,52} \u8FDB\u884C\u5347\u5E8F\u6392\u5E8F</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">52</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6392\u5E8F\u524D&quot;</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">// \u5F00\u59CB\u5192\u6CE1\u6392\u5E8F</span>
	<span class="token comment">// \u603B\u5171\u6392\u5E8F\u8F6E\u6570\u4E3A \u5143\u7D20\u4E2A\u6570 - 1</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// \u5185\u5C42\u5FAA\u73AF\u5BF9\u6BD4\u6B21\u6570 = \u5143\u7D20\u4E2A\u6570-\u5F53\u524D\u8F6E\u6570-1</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u4EA4\u6362\u4F4D\u7F6E</span>
				<span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
				arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
				arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>


	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6392\u5E8F\u540E&quot;</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8C\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4</h3><p>\u591A\u7EF4\u6570\u7EC4\u6700\u7B80\u5355\u7684\u5F62\u5F0F\u662F\u4E8C\u7EF4\u6570\u7EC4\u3002\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\uFF0C\u5728\u672C\u8D28\u4E0A\uFF0C\u662F\u4E00\u4E2A\u4E00\u7EF4\u6570\u7EC4\u7684\u5217\u8868\u3002\u58F0\u660E\u4E00\u4E2A x \u884C y \u5217\u7684\u4E8C\u7EF4\u6574\u578B\u6570\u7EC4\uFF0C\u5F62\u5F0F\u5982\u4E0B\uFF1A <code>type arrayName [ x ][ y ];</code></p><h4 id="\u4E8C\u7EF4\u6570\u7EC4\u5B9A\u4E49\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4\u5B9A\u4E49\u65B9\u5F0F" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4\u5B9A\u4E49\u65B9\u5F0F</h4><p>\u4E8C\u7EF4\u6570\u7EC4\u5B9A\u4E49\u7684\u56DB\u79CD\u65B9\u5F0F\uFF1A</p><ol><li><code>\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u884C\u6570][\u5217\u6570];</code></li><li><code>\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u884C\u6570][\u5217\u6570] = {{\u6570\u636E1, \u6570\u636E2}, {\u6570\u636E3, \u6570\u636E4}};</code></li><li><code>\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u884C\u6570][\u5217\u6570] = {\u6570\u636E1, \u6570\u636E2, \u6570\u636E3, \u6570\u636E4};</code></li><li><code>\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[][\u5217\u6570] = {\u6570\u636E1, \u6570\u636E2, \u6570\u636E3, \u6570\u636E4};</code></li></ol><p>\u5EFA\u8BAE\uFF1A\u4EE5\u4E0A 4 \u56DB\u79CD\u5B9A\u4E49\u65B9\u5F0F\uFF0C\u5229\u7528\u7B2C\u4E8C\u79CD\u66F4\u52A0\u76F4\u89C2\uFF0C\u63D0\u9AD8\u4EE3\u7801\u53EF\u8BFB\u6027</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">//1.\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u884C\u6570][\u5217\u6570];</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
	arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
	arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
	arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u5916\u5C42\u5FAA\u73AF\u6253\u5370\u884C\u6570\uFF0C\u5185\u5C42\u5FAA\u73AF\u6253\u5370\u5217\u6570</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>



	<span class="token comment">//2.\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u884C\u6570][\u5217\u6570] = { {\u6570\u636E1, \u6570\u636E2}, {\u6570\u636E3, \u6570\u636E4} };</span>
	<span class="token keyword">int</span> arr2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">//3.\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[\u884C\u6570][\u5217\u6570] = { \u6570\u636E1, \u6570\u636E2, \u6570\u636E3, \u6570\u636E4 };</span>
	<span class="token keyword">int</span> arr3<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> arr3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//4.\u6570\u636E\u7C7B\u578B \u6570\u7EC4\u540D[][\u5217\u6570] = { \u6570\u636E1, \u6570\u636E2, \u6570\u636E3, \u6570\u636E4 };</span>
	<span class="token keyword">int</span> arr4<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> arr4<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E8C\u7EF4\u6570\u7EC4\u6570\u7EC4\u540D" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4\u6570\u7EC4\u540D" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4\u6570\u7EC4\u540D</h4><ul><li>\u67E5\u770B\u4E8C\u7EF4\u6570\u7EC4\u6240\u5360\u5185\u5B58\u7A7A\u95F4</li><li>\u83B7\u53D6\u4E8C\u7EF4\u6570\u7EC4\u9996\u5730\u5740</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u4E24\u884C\u4E09\u5217\u7684\u4E8C\u7EF4\u6570\u7EC4</span>
	<span class="token keyword">int</span> arr2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token comment">//\u67E5\u770B\u4E8C\u7EF4\u6570\u7EC4\u6240\u5360\u5185\u5B58\u7A7A\u95F4</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u5360\u7528\u5185\u5B58\u7A7A\u95F4&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u7B2C\u4E00\u884C\u5360\u7528\u5185\u5B58\u7A7A\u95F4&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u7B2C\u4E00\u4E2A\u5143\u7D20\u5360\u7528\u5185\u5B58\u7A7A\u95F4&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u884C\u6570\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u5217\u6570\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>


	<span class="token comment">//\u83B7\u53D6\u4E8C\u7EF4\u6570\u7EC4\u9996\u5730\u5740</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u7684\u9996\u5730\u5740&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>arr2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7B2C\u4E00\u884C\u7684\u9996\u5730\u5740&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7B2C\u4E8C\u884C\u7684\u9996\u5730\u5740&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>arr2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>


	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u9996\u5730\u5740&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7B2C\u4E8C\u4E2A\u5143\u7D20\u9996\u5730\u5740&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E8C\u7EF4\u6570\u7EC4\u5E94\u7528\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4\u5E94\u7528\u6848\u4F8B" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4\u5E94\u7528\u6848\u4F8B</h4><p><strong>\u8003\u8BD5\u6210\u7EE9\u7EDF\u8BA1\uFF1A</strong> \u6848\u4F8B\u63CF\u8FF0\uFF1A\u6709\u4E09\u540D\u540C\u5B66\uFF08\u5F20\u4E09\u3001\u674E\u56DB\u3001\u738B\u4E94\uFF09\u518D\u4E00\u6B21\u8003\u8BD5\u4E2D\u6210\u7EE9\u5206\u8868\u5982\u4E0B\u8868\uFF0C\u8BF7\u5206\u522B\u8F93\u51FA\u4E09\u4F4D\u540C\u5B66\u7684\u603B\u6210\u7EE9</p><table><thead><tr><th></th><th>\u8BED\u6587</th><th>\u6570\u5B66</th><th>\u82F1\u8BED</th></tr></thead><tbody><tr><td>\u5F20\u4E09</td><td>100</td><td>100</td><td>100</td></tr><tr><td>\u674E\u56DB</td><td>90</td><td>50</td><td>100</td></tr><tr><td>\u738B\u4E94</td><td>60</td><td>70</td><td>80</td></tr></tbody></table><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u6210\u7EE9\u6570\u7EC4</span>
	<span class="token keyword">int</span> scores<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	string names<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u738B\u4E94&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token comment">// \u7EDF\u8BA1\u5206\u6570</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u7EDF\u8BA1</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			sum <span class="token operator">+=</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token comment">//cout &lt;&lt; scores[i][j] &lt;&lt; &quot; &quot;;</span>
		<span class="token punctuation">}</span>
		cout <span class="token operator">&lt;&lt;</span> names<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4E2A\u4EBA\u7684\u603B\u5206\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> sum <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h2><h3 id="\u6982\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0-1" aria-hidden="true">#</a> \u6982\u8FF0</h3><p>\u4F5C\u7528\uFF1A\u5C06\u4E00\u6BB5\u7ECF\u5E38\u4F7F\u7528\u7684\u4EE3\u7801\u5C01\u88C5\u8D77\u6765\uFF0C\u51CF\u5C11\u91CD\u590D\u4EE3\u7801 \u4E00\u4E2A\u8F83\u5927\u7684\u7A0B\u5E8F\uFF0C\u4E00\u822C\u5206\u4E3A\u82E5\u5E72\u4E2A\u7A0B\u5E8F\u5757\uFF0C\u6BCF\u4E2A\u6A21\u5757\u5B9E\u73B0\u7279\u5B9A\u7684\u529F\u80FD\u3002</p><h3 id="\u51FD\u6570\u7684\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7684\u5B9A\u4E49" aria-hidden="true">#</a> \u51FD\u6570\u7684\u5B9A\u4E49</h3><p>\u51FD\u6570\u7684\u5B9A\u4E49\u4E00\u822C\u4E3B\u8981\u6709\u4E94\u4E2A\u6B65\u9AA4\uFF1A</p><ol><li>\u8FD4\u56DE\u503C\u7C7B\u578B</li><li>\u51FD\u6570\u540D</li><li>\u53C2\u6570\u8868\u5217</li><li>\u51FD\u6570\u4F53\u8BED\u53E5</li><li>return \u8868\u8FBE\u5F0F</li></ol><p><strong>\u8BED\u6CD5\uFF1A</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>\u8FD4\u56DE\u503C\u7C7B\u578B \u51FD\u6570\u540D<span class="token punctuation">(</span>\u53C2\u6570\u5217\u8868<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  \u51FD\u6570\u4F53\u8BED\u53E5
  <span class="token keyword">return</span> \u8868\u8FBE\u5F0F
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5B9A\u4E49\u52A0\u6CD5\u51FD\u6570\uFF0C\u5B9E\u73B0\u4E24\u6570\u76F8\u52A0</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">//\u51FD\u6570\u7684\u5B9A\u4E49</span>
<span class="token comment">//\u8BED\u6CD5\uFF1A\u8FD4\u56DE\u503C\u7C7B\u578B \u51FD\u6570\u540D(\u5217\u8868\u9610\u8FF0) {\u51FD\u6570\u4F53\u8BED\u53E5 return\u8868\u8FBE\u5F0F}</span>

<span class="token comment">// \u5B9A\u4E49\u52A0\u6CD5\u51FD\u6570\uFF0C\u5B9E\u73B0\u4E24\u6570\u76F8\u52A0</span>
<span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1 <span class="token punctuation">,</span> <span class="token keyword">int</span> num2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> sum <span class="token operator">=</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span>
	<span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u7684\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7684\u8C03\u7528" aria-hidden="true">#</a> \u51FD\u6570\u7684\u8C03\u7528</h3><p>\u529F\u80FD\uFF1A\u4F7F\u7528\u5B9A\u4E49\u597D\u7684\u51FD\u6570 \u8BED\u6CD5\uFF1A\u51FD\u6570\u540D\uFF08\u53C2\u6570\uFF09</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">//\u51FD\u6570\u7684\u5B9A\u4E49</span>
<span class="token comment">//\u8BED\u6CD5\uFF1A\u8FD4\u56DE\u503C\u7C7B\u578B \u51FD\u6570\u540D(\u5217\u8868\u9610\u8FF0) {\u51FD\u6570\u4F53\u8BED\u53E5 return\u8868\u8FBE\u5F0F}</span>

<span class="token comment">// \u5B9A\u4E49\u52A0\u6CD5\u51FD\u6570\uFF0C\u5B9E\u73B0\u4E24\u6570\u76F8\u52A0</span>
<span class="token comment">// \u521D\u59CB\u5316 num2 \u7684\u9ED8\u8BA4\u503C\uFF0C\u8C03\u7528\u65F6\u53EF\u4EE5\u9009\u62E9\u6027\u4F20\u9012</span>
<span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1 <span class="token punctuation">,</span> <span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> sum <span class="token operator">=</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span>
	<span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	<span class="token comment">// main \u51FD\u6570\u4E2D\u8C03\u7528\u51FD\u6570</span>
	<span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> result <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u503C\u4F20\u9012" tabindex="-1"><a class="header-anchor" href="#\u503C\u4F20\u9012" aria-hidden="true">#</a> \u503C\u4F20\u9012</h3><ul><li>\u6240\u8C13\u503C\u4F20\u9012\uFF0C\u5C31\u662F\u51FD\u6570\u8C03\u7528\u65F6\u5B9E\u53C2\u5C06\u6570\u503C\u4F20\u5165\u7ED9\u5F62\u53C2</li><li>\u503C\u4F20\u9012\u65F6\uFF0C\u5982\u679C\u5F62\u53C2\u53D1\u751F\u6539\u53D8\uFF0C\u5E76\u4E0D\u4F1A\u5F71\u54CD\u5B9E\u53C2</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// \u503C\u4F20\u9012</span>
<span class="token comment">// \u5B9A\u4E49\u51FD\u6570\uFF0C\u5B9E\u73B0\u4E24\u6570\u5B57\u8FDB\u884C\u4EA4\u6362</span>
<span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1 <span class="token punctuation">,</span> <span class="token keyword">int</span> num2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4EA4\u6362\u524Dnum1&quot;</span> <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4EA4\u6362\u524Dnum2&quot;</span> <span class="token operator">&lt;&lt;</span> num2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token keyword">int</span> temp <span class="token operator">=</span> num1<span class="token punctuation">;</span>
	num1 <span class="token operator">=</span> num2<span class="token punctuation">;</span>
	num2 <span class="token operator">=</span> temp<span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4EA4\u6362\u540Enum1&quot;</span> <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4EA4\u6362\u540Enum2&quot;</span> <span class="token operator">&lt;&lt;</span> num2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	<span class="token comment">// \u503C\u4F20\u9012\u65F6\uFF0C\u5982\u679C\u5F62\u53C2\u53D1\u751F\u6539\u53D8\uFF0C\u5E76\u4E0D\u4F1A\u5F71\u54CD\u5B9E\u53C2</span>
	<span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u7684\u5E38\u89C1\u6837\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7684\u5E38\u89C1\u6837\u5F0F" aria-hidden="true">#</a> \u51FD\u6570\u7684\u5E38\u89C1\u6837\u5F0F</h3><ol><li>\u65E0\u53C2\u65E0\u8FD4</li><li>\u6709\u53C2\u65E0\u53CD</li><li>\u65E0\u53C2\u6709\u8FD4</li><li>\u6709\u53C2\u6709\u8FD4</li></ol><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">//1. \u65E0\u53C2\u65E0\u8FD4</span>
<span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u65E0\u53C2\u65E0\u8FD4&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//2. \u6709\u53C2\u65E0\u53CD</span>
<span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6709\u53C2\u65E0\u53CD&quot;</span> <span class="token operator">&lt;&lt;</span> num <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//3. \u65E0\u53C2\u6709\u8FD4</span>
<span class="token keyword">int</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">//4. \u6709\u53C2\u6709\u8FD4</span>
<span class="token keyword">int</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> num1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	<span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">test2</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">test4</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u7684\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7684\u58F0\u660E" aria-hidden="true">#</a> \u51FD\u6570\u7684\u58F0\u660E</h3><p>\u4F5C\u7528\uFF1A\u544A\u8BC9\u7F16\u8BD1\u5668\u51FD\u6570\u540D\u79F0\u53CA\u5982\u4F55\u8C03\u7528\u51FD\u6570\uFF0C\u51FD\u6570\u7684\u5B9E\u9645\u4E3B\u4F53\u53EF\u4EE5\u5355\u72EC\u5B9A\u4E49</p><ul><li>\u51FD\u6570\u7684<strong>\u58F0\u660E\u53EF\u4EE5\u591A\u6B21</strong>\uFF0C\u4F46\u662F\u51FD\u6570\u7684<strong>\u5B9A\u4E49\u53EA\u80FD\u6709\u4E00\u6B21</strong></li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// \u51FD\u6570\u58F0\u660E\uFF0C\u63D0\u524D\u544A\u8BC9\u7F16\u8BD1\u5668\u51FD\u6570\u7684\u5B58\u5728\uFF0C\u53EF\u4EE5\u5229\u7528\u51FD\u6570\u7684\u58F0\u660E</span>
<span class="token comment">// \u51FD\u6570\u58F0\u660E\u53EF\u4EE5\u5199\u591A\u6B21\uFF0C\u51FD\u6570\u5B9A\u4E49\u53EA\u80FD\u6709\u4E00\u6B21</span>
<span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	<span class="token comment">// \u51FD\u6570\u8C03\u7528\u6253\u5370</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6700\u5927\u503C\u4E3A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// \u51FD\u6570\u5B9A\u4E49-\u5B9E\u73B0\u8FD4\u56DE\u6700\u5927\u503C</span>
<span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1<span class="token punctuation">,</span> <span class="token keyword">int</span> num2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> num1 <span class="token operator">&gt;</span> num2 <span class="token operator">?</span> num1 <span class="token operator">:</span> num2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u7684\u5206\u6587\u4EF6\u7F16\u5199" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7684\u5206\u6587\u4EF6\u7F16\u5199" aria-hidden="true">#</a> \u51FD\u6570\u7684\u5206\u6587\u4EF6\u7F16\u5199</h3><p>\u4F5C\u7528\uFF1A\u8BA9\u4EE3\u7801\u7ED3\u6784\u66F4\u6E05\u6670 \u51FD\u6570\u5206\u6587\u4EF6\u7F16\u5199\u4E00\u822C\u6709 4 \u4E2A\u6B65\u9AA4\uFF1A</p><ol><li>\u521B\u5EFA\u540E\u7F00\u540D\u4E3A<code>.h</code> \u7684\u5934\u6587\u4EF6</li><li>\u521B\u5EFA\u540E\u7F00\u540D\u4E3A<code>.cpp</code> \u7684\u6E90\u6587\u4EF6</li><li>\u5728\u5934\u6587\u4EF6\u4E2D\u5199\u51FD\u6570\u7684\u58F0\u660E</li><li>\u5728\u6E90\u6587\u4EF6\u4E2D\u5199\u51FD\u6570\u7684\u5B9A\u4E49</li></ol><p><strong>\u4E00\u3001\u5B9A\u4E49\u6587\u4EF6</strong><strong>1. \u521B\u5EFA\u540E\u7F00\u540D\u4E3A<code>.h</code> \u7684\u5934\u6587\u4EF6</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">once</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token comment">//\u51FD\u6570\u7684\u58F0\u660E</span>
<span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. \u521B\u5EFA\u540E\u7F00\u540D\u4E3A<code>.cpp</code> \u7684\u6E90\u6587\u4EF6</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;swap.h&quot;</span></span>

<span class="token comment">// \u51FD\u6570\u7684\u5B9A\u4E49-\u5B9E\u73B0\u4E24\u6570\u5B57\u4EA4\u6362\u51FD\u6570</span>
<span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> temp <span class="token operator">=</span> a<span class="token punctuation">;</span>
	a <span class="token operator">=</span> b<span class="token punctuation">;</span>
	b <span class="token operator">=</span> temp<span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b=&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u4E00\u3001\u5F15\u5165\u5934\u6587\u4EF6\uFF0C\u8C03\u7528\u51FD\u6570</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// \u5F15\u7528\u5934\u6587\u4EF6</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;swap.h&quot;</span></span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	<span class="token comment">// \u51FD\u6570\u7684\u8C03\u7528</span>
	<span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488" aria-hidden="true">#</a> \u6307\u9488</h2><h3 id="\u6307\u9488\u7684\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u7684\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> \u6307\u9488\u7684\u57FA\u672C\u6982\u5FF5</h3><p>\u6307\u9488\u7684\u4F5C\u7528\uFF1A<strong>\u53EF\u4EE5\u901A\u8FC7\u6307\u9488\u95F4\u63A5\u8BBF\u95EE\u5185\u5B58</strong></p><ul><li>\u5185\u5B58\u7F16\u53F7\u662F\u4ECE 0 \u5F00\u59CB\u8BB0\u5F55\u7684\uFF0C\u4E00\u822C\u7528 16 \u8FDB\u5236\u6570\u5B57\u8868\u793A</li><li>\u53EF\u4EE5\u5229\u7528\u6307\u9488\u53D8\u91CF\u4FDD\u5B58\u5730\u5740</li></ul><h3 id="\u6307\u9488\u53D8\u91CF\u7684\u5B9A\u4E49\u548C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u53D8\u91CF\u7684\u5B9A\u4E49\u548C\u4F7F\u7528" aria-hidden="true">#</a> \u6307\u9488\u53D8\u91CF\u7684\u5B9A\u4E49\u548C\u4F7F\u7528</h3><p>\u6307\u9488\u53D8\u91CF\u5B9A\u4E49\u8BED\u6CD5\uFF1A<code>\u6570\u636E\u7C7B\u578B * \u53D8\u91CF\u540D;</code></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

	<span class="token comment">// 1.\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token comment">// \u6307\u9488\u53D8\u91CF\u5B9A\u4E49\u8BED\u6CD5\uFF1A\`\u6570\u636E\u7C7B\u578B * \u53D8\u91CF\u540D;\`</span>
	<span class="token keyword">int</span><span class="token operator">*</span> p<span class="token punctuation">;</span>
	<span class="token comment">// \u8BA9\u6307\u9488\u8BB0\u5F55\u53D8\u91CFa\u5730\u5740</span>
	p <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a\u7684\u5730\u5740\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6307\u9488p\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">// 2.\u4F7F\u7528\u6307\u9488</span>
	<span class="token comment">//\u53EF\u4EE5\u901A\u8FC7\u89E3\u5F15\u7528\u7684\u65B9\u5F0F\u6765\u627E\u5230\u6307\u9488\u53EA\u60F3\u7684\u5185\u5B58\uFF0C\u6307\u9488\u524D\u6DFB\u52A0 * \u53F7\u4EE3\u8868\u89E3\u5F15\u7528\uFF0C\u627E\u5230\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u7684\u6570\u636E</span>
	<span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a=&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;*p=&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u6240\u5360\u5185\u5B58\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u6240\u5360\u5185\u5B58\u7A7A\u95F4" aria-hidden="true">#</a> \u6307\u9488\u6240\u5360\u5185\u5B58\u7A7A\u95F4</h3><p>\u63D0\u95EE\uFF1A\u6307\u9488\u4E5F\u662F\u79CD\u6570\u636E\u7C7B\u578B\uFF0C\u90A3\u4E48\u8FD9\u79CD\u6570\u636E\u7C7B\u578B\u5360\u7528\u591A\u5C11\u5185\u5B58\u7A7A\u95F4\uFF1F</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

   <span class="token comment">/* \u572832\u4F4D\u64CD\u4F5C\u7CFB\u7EDF\u4E0B\uFF1A\u6307\u9488\u5360\u75284\u4E2A\u5B57\u8282\u7A7A\u95F4\uFF0C\u548C\u6570\u636E\u7C7B\u578B\u65E0\u5173
    \u572864\u4F4D\u64CD\u4F5C\u7CFB\u7EDF\u4E0B\uFF1A\u6307\u9488\u5360\u75288\u4E2A\u5B57\u8282\u7A7A\u95F4\uFF0C\u548C\u6570\u636E\u7C7B\u578B\u65E0\u5173*/</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
   <span class="token comment">/* int* p;
    p = &amp;a;*/</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6307\u9488\u5E76\u4E14\u6307\u5B9A\u503C</span>
    <span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;sizeof(int*) = &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;sizeof(float*) = &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;sizeof(char*) = &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;sizeof(double*) = &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7A7A\u6307\u9488\u548C\u91CE\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u6307\u9488\u548C\u91CE\u6307\u9488" aria-hidden="true">#</a> \u7A7A\u6307\u9488\u548C\u91CE\u6307\u9488</h3><ul><li>\u7A7A\u6307\u9488\uFF1A\u6307\u9488\u53D8\u91CF\u6307\u5411\u5185\u5B58\u7F16\u53F7\u4E3A 0 \u7684\u7A7A\u95F4</li><li>\u7528\u9014\uFF1A\u521D\u59CB\u5316\u6307\u9488\u53D8\u91CF</li><li>\u6CE8\u610F\uFF1A\u7A7A\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u662F\u4E0D\u53EF\u4EE5\u8BBF\u95EE\u7684</li></ul><p><strong>\u793A\u4F8B 1\uFF1A\u7A7A\u6307\u9488</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u6307\u9488\u53D8\u91CF p \u6307\u5411\u5185\u5B58\u5730\u5740\u7F16\u53F7\u4E3A0\u7684\u7A7A\u95F4</span>
	<span class="token keyword">int</span><span class="token operator">*</span>p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
	<span class="token comment">// \u8BBF\u95EE\u7A7A\u6307\u9488\u62A5\u9519</span>
	<span class="token comment">// \u5185\u5B58\u7F16\u53F70~255\u4E3A\u7CFB\u7EDF\u5360\u7528\u5185\u5B58\uFF0C\u4E0D\u5141\u8BB8\u7528\u6237\u8BBF\u95EE</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u793A\u4F8B 2\uFF1A\u91CE\u6307\u9488</strong><br> \u91CE\u6307\u9488\uFF1A\u6307\u9488\u53D8\u91CF\u6307\u5411\u975E\u6CD5\u7684\u5185\u5B58\u7A7A\u95F4</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// \u6307\u9488\u53D8\u91CFp\u6307\u5411\u5185\u5B58\u5730\u5740\u7F16\u53F7\u4E3A0x1100\u7684\u7A7A\u95F4,\u5C3D\u91CF\u5728\u7A0B\u5E8F\u4E2D\u51FA\u73B0\u91CE\u6307\u9488</span>
    <span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">0x1100</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BBF\u95EE\u91CE\u6307\u9488\u62A5\u9519</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="const-\u4FEE\u9970\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#const-\u4FEE\u9970\u6307\u9488" aria-hidden="true">#</a> const \u4FEE\u9970\u6307\u9488</h3><p>const \u4FEE\u9970\u6307\u9488\u7684\u4E09\u79CD\u60C5\u51B5\uFF1A</p><ul><li>const \u4FEE\u9970\u6307\u9488---\u5E38\u91CF\u6307\u9488</li><li>const \u4FEE\u9970\u4EA7\u91CF---\u6307\u9488\u5E38\u91CF</li><li>const \u5373\u4FEE\u9970\u6307\u9488\uFF0C\u53C8\u4FEE\u9970\u5E38\u91CF</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>

    <span class="token comment">// 1.const \u4FEE\u9970\u7684\u662F\u6307\u9488-- \u5E38\u91CF\u6307\u9488\uFF0C\u7279\u70B9\uFF1A\u6307\u9488\u7684\u6307\u5411\u53EF\u4EE5\u4FEE\u6539\uFF0C\u4F46\u662F\u6307\u9488\u6307\u5411\u7684\u503C\u4E0D\u53EF\u4EE5\u6539</span>
    <span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    p <span class="token operator">=</span> <span class="token operator">&amp;</span>b<span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token comment">// 2.cosnt\u4FEE\u9970\u5E38\u91CF ---\u6307\u9488\u5E38\u91CF\uFF1A\u7279\u70B9\uFF1A\u6307\u9488\u7684\u6307\u5411\u4E0D\u53EF\u4EE5\u4FEE\u6539\uFF0C\u6307\u9488\u7684\u503C\u53EF\u4EE5\u4FEE\u6539</span>
    <span class="token keyword">int</span><span class="token operator">*</span> <span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>
    <span class="token operator">*</span>p2 <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token comment">// 3.const\u5373\u4FEE\u9970\u6307\u9488\uFF0C\u53C8\u4FEE\u9970\u6307\u9488--\u7279\u70B9:\u6307\u5411\u548C\u503C\u90FD\u4E0D\u53EF\u4EE5\u4FEE\u6539</span>
    <span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">*</span> <span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p3 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>


    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u548C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u548C\u6570\u7EC4" aria-hidden="true">#</a> \u6307\u9488\u548C\u6570\u7EC4</h3><p>\u4F5C\u7528\uFF1A\u5229\u7528\u6307\u9488\u8BBF\u95EE\u6570\u7EC4\u4E2D\u7684\u5143\u7D20</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E3A\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> arr<span class="token punctuation">;</span> <span class="token comment">// arr\u5C31\u662F\u6570\u7EC4\u9996\u5730\u5740</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5229\u7528\u6307\u9488\u8BBF\u95EE\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    p<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u5411\u540E\u79FB\u52A84\u4E2A\u5B57\u8282\uFF0C\u6574\u5F62\u7C7B\u578B\u5360\u75284\u4E2A\u5B57\u8282</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5229\u7528\u6307\u9488\u8BBF\u95EE\u7B2C\u4E8C\u4E2A\u5143\u7D20\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5229\u7528\u6307\u9488\u904D\u5386\u6570\u7EC4&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token operator">*</span> p2 <span class="token operator">=</span> arr<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//cout &lt;&lt; arr[i] &lt;&lt; endl;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        p2<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u548C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u548C\u51FD\u6570" aria-hidden="true">#</a> \u6307\u9488\u548C\u51FD\u6570</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// \u503C\u4F20\u9012</span>
<span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1<span class="token punctuation">,</span> <span class="token keyword">int</span> num2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4EA4\u6362\u524Dnum1&quot;</span> <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4EA4\u6362\u524Dnum2&quot;</span> <span class="token operator">&lt;&lt;</span> num2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token keyword">int</span> temp <span class="token operator">=</span> num1<span class="token punctuation">;</span>
	num1 <span class="token operator">=</span> num2<span class="token punctuation">;</span>
	num2 <span class="token operator">=</span> temp<span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4EA4\u6362\u540Enum1&quot;</span> <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4EA4\u6362\u540Enum2&quot;</span> <span class="token operator">&lt;&lt;</span> num2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5730\u5740\u4F20\u9012</span>
<span class="token keyword">void</span> <span class="token function">swap02</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>p1<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>p2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token operator">*</span>p1<span class="token punctuation">;</span>
	<span class="token operator">*</span>p1 <span class="token operator">=</span> <span class="token operator">*</span>p2<span class="token punctuation">;</span>
	<span class="token operator">*</span>p2 <span class="token operator">=</span> temp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 1.\u503C\u4F20\u9012\uFF0C\u503C\u4F20\u9012\u4E0D\u53EF\u4EE5\u4FEE\u9970\u5B9E\u53C2\uFF0C\u4E5F\u5C31\u662F\u5B9E\u53C2\u4E0D\u4F1A\u6539\u53D8</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 2. \u5730\u5740\u4F20\u9012,\u5982\u679C\u662F\u5730\u5740\u4F20\u9012\uFF0C\u53EF\u4EE5\u4FEE\u9970\u5B9E\u53C2\uFF0C\u5B9E\u53C2\u4F1A\u6539\u53D8</span>
	<span class="token function">swap02</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u3001\u6570\u7EC4\u3001\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u3001\u6570\u7EC4\u3001\u51FD\u6570" aria-hidden="true">#</a> \u6307\u9488\u3001\u6570\u7EC4\u3001\u51FD\u6570</h3><p>\u6848\u4F8B\u63CF\u8FF0\uFF1A\u5C01\u88C5\u4E00\u4E2A\u800C\u51FD\u6570\uFF0C\u5229\u7528\u5192\u6CE1\u6392\u5E8F\uFF0C\u5B9E\u73B0\u5BF9\u6574\u578B\u6570\u7EC4\u7684\u5347\u5E8F\u6392\u5E8F \u6570\u7EC4\uFF1A<code>int arr[10] = {3,5,8,12,2,9,7,4,6,1}</code></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>


<span class="token comment">// \u5192\u6CE1\u6392\u5E8F\u51FD\u6570</span>
<span class="token keyword">void</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u4EA4\u6362\u4F4D\u7F6E</span>
				<span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
				arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
				arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6253\u5370\u6570\u7EC4</span>
<span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token comment">// \u6570\u7EC4\u957F\u5EA6</span>
	<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u4F20\u5165\u6392\u5E8F\u51FD\u6570</span>
	<span class="token function">bubbleSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u6253\u5370\u6570\u7EC4</span>
	<span class="token function">printArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u6784\u4F53" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53" aria-hidden="true">#</a> \u7ED3\u6784\u4F53</h2><h3 id="\u7ED3\u6784\u4F53\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u57FA\u672C\u6982\u5FF5</h3><p>\u7ED3\u6784\u4F53\u5C5E\u4E8E\u7528\u6237\u81EA\u5B9A\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u5141\u8BB8\u7528\u6237\u5B58\u50A8\u4E0D\u540C\u7684\u6570\u636E\u7C7B\u578B</p><h3 id="\u7ED3\u6784\u4F53\u5B9A\u4E49\u548C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u5B9A\u4E49\u548C\u4F7F\u7528" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u5B9A\u4E49\u548C\u4F7F\u7528</h3><p>\u8BED\u6CD5\uFF1A<code>struce \u7ED3\u6784\u4F53\u540D {\u7ED3\u6784\u4F53\u6210\u5458\u5217\u8868};</code><br> \u901A\u8FC7\u7ED3\u6784\u4F53\u521B\u5EFA\u53D8\u91CF\u7684\u4E09\u79CD\u65B9\u5F0F\uFF1A</p><ul><li>struce \u7ED3\u6784\u4F53\u540D \u53D8\u91CF\u540D</li><li>struce \u7ED3\u6784\u4F53\u540D \u53D8\u91CF\u540D = {\u6210\u5458 1 \u503C,\u6210\u5458 2 \u503C,....}</li><li>\u5B9A\u4E49\u7ED3\u6784\u4F53\u65F6\u987A\u4FBF\u521B\u5EFA\u53D8\u91CF</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token comment">// \u7ED3\u6784\u4F53\u5B9A\u4E49---\u51FA\u6602\u89C1\u5B66\u751F\u7C7B\u578B</span>
<span class="token keyword">struct</span> <span class="token class-name">Student</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u6210\u5458\u5217\u8868</span>
	string name<span class="token punctuation">;</span> <span class="token comment">// \u59D3\u540D</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span> <span class="token comment">// \u5E74\u9F84</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span> <span class="token comment">// \u5206\u6570</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


<span class="token comment">// /3.\u5728\u5B9A\u4E49\u7ED3\u6784\u4F53\u65F6\u987A\u4FBF\u521B\u5EFA\u7ED3\u6784\u4F53\u53D8\u91CF</span>
<span class="token keyword">struct</span> <span class="token class-name">Student_s3</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u6210\u5458\u5217\u8868</span>
	string name<span class="token punctuation">;</span> <span class="token comment">// \u59D3\u540D</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span> <span class="token comment">// \u5E74\u9F84</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span> <span class="token comment">// \u5206\u6570</span>
<span class="token punctuation">}</span>s3<span class="token punctuation">;</span>



<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u901A\u8FC7\u5B66\u751F\u7C7B\u578B\u521B\u5EFA\u5177\u4F53\u5B66\u751F</span>
	<span class="token comment">//1. struct Student s1</span>
	<span class="token keyword">struct</span> <span class="token class-name">Student</span> s1<span class="token punctuation">;</span>
	<span class="token comment">// \u7ED9s1\u5C5E\u6027\u8D4B\u503C\uFF0C\u901A\u8FC7.\u8BBF\u95EE\u7ED3\u6784\u4F53\u53D8\u91CF\u4E2D\u7684\u5C5E\u6027</span>
	s1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">;</span>
	s1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>
	s1<span class="token punctuation">.</span>score <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s1<span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s1<span class="token punctuation">.</span>age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5206\u6570\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s1<span class="token punctuation">.</span>score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">//2. struct Student s2 = {....}</span>
	<span class="token keyword">struct</span> <span class="token class-name">Student</span> s2 <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span>
		<span class="token number">19</span><span class="token punctuation">,</span>
		<span class="token number">80</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s2<span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s2<span class="token punctuation">.</span>age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5206\u6570\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s2<span class="token punctuation">.</span>score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

	<span class="token comment">//3.\u5728\u5B9A\u4E49\u7ED3\u6784\u4F53\u65F6\u987A\u4FBF\u521B\u5EFA\u7ED3\u6784\u4F53\u53D8\u91CF</span>
	s3<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u738B\u4E94&quot;</span><span class="token punctuation">;</span>
	s3<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
	s3<span class="token punctuation">.</span>score <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s3<span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s3<span class="token punctuation">.</span>age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5206\u6570\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s3<span class="token punctuation">.</span>score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED3\u6784\u4F53\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u6570\u7EC4" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u6570\u7EC4</h3><p>\u4F5C\u7528:\u5C06\u81EA\u5B9A\u4E49\u7684\u7ED3\u6784\u4F53\u653E\u5230\u6570\u7EC4\u4E2D\u65B9\u4FBF\u7EF4\u62A4<br> \u8BED\u6CD5\uFF1A<code>struct \u7ED3\u6784\u4F53\u540D \u6570\u7EC4\u540D[\u5143\u7D20\u4E2A\u6570] = {{}, {}, ......{}}</code></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token comment">// \u7ED3\u6784\u4F53\u5B9A\u4E49</span>
<span class="token keyword">struct</span> <span class="token class-name">student</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u7ED3\u6784\u4F53\u6570\u7EC4</span>
	<span class="token keyword">struct</span> <span class="token class-name">student</span> arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token punctuation">{</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;\u738B\u4E94&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token comment">// \u4FEE\u6539\u7ED3\u6784\u4F53\u4E2D\u7684\u503C</span>
	arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u9EBB\u5B50&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// \u904D\u5386\u7ED3\u6784\u4F53</span>
	<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5206\u6570\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED3\u6784\u4F53\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u6307\u9488" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u6307\u9488</h3><p>\u4F5C\u7528\uFF1A\u901A\u8FC7\u6307\u9488\u8BBF\u95EE\u7ED3\u6784\u4F53\u4E2D\u7684\u6210\u5458</p><ul><li>\u5229\u7528\u64CD\u4F5C\u7B26<code>-&gt;</code>\u53EF\u4EE5\u901A\u8FC7\u7ED3\u6784\u4F53\u6307\u9488\u8BBF\u95EE\u7ED3\u6784\u4F53\u5C5E\u6027</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token comment">// \u7ED3\u6784\u4F53\u5B9A\u4E49</span>
<span class="token keyword">struct</span> <span class="token class-name">student</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u521B\u5EFA\u7ED3\u6784\u4F53\u53D8\u91CF</span>
	<span class="token keyword">struct</span> <span class="token class-name">student</span> stu <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token comment">// \u901A\u8FC7\u6307\u9488\u6307\u5411\u7ED3\u6784\u4F53\u53D8\u91CF</span>
	<span class="token keyword">struct</span> <span class="token class-name">student</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>stu<span class="token punctuation">;</span>
	<span class="token comment">// \u901A\u8FC7\u6307\u9488\u8BBF\u95EE\u7ED3\u6784\u4F53\u53D8\u91CF\u4E2D\u7684\u6570\u636E</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> p<span class="token operator">-&gt;</span>name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> p<span class="token operator">-&gt;</span>age <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5206\u6570\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> p<span class="token operator">-&gt;</span>score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53</h3><p>\u4F5C\u7528\uFF1A\u7ED3\u6784\u4F53\u4E2D\u6210\u5458\u53EF\u4EE5\u662F\u53E6\u4E00\u4E2A\u7ED3\u6784\u4F53<br> \u4F8B\u5982\uFF1A\u6BCF\u4E2A\u8001\u5E08\u8F85\u5BFC\u4E00\u4E2A\u5B66\u5458\uFF0C\u4E00\u4E2A\u8001\u5E08\u7684\u7ED3\u6784\u4F53\u4E2D\uFF0C\u8BB0\u5F55\u4E00\u4E2A\u5B66\u751F\u7684\u7ED3\u6784\u4F53</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token comment">// \u5B66\u751F\u7ED3\u6784\u4F53\u5B9A\u4E49</span>
<span class="token keyword">struct</span> <span class="token class-name">student</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6559\u5E08\u7ED3\u6784\u4F53\u5B9A\u4E49</span>
<span class="token keyword">struct</span> <span class="token class-name">teacher</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> id<span class="token punctuation">;</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	<span class="token keyword">struct</span> <span class="token class-name">student</span> stu<span class="token punctuation">;</span> <span class="token comment">// \u5B50\u7ED3\u6784\u4F53\u5B66\u751F</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u521B\u5EFA\u7ED3\u6784\u4F53\u53D8\u91CF</span>
	teacher t<span class="token punctuation">;</span>
	t<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
	t<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u5F20\u52CB&quot;</span><span class="token punctuation">;</span>
	t<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">;</span>
	t<span class="token punctuation">.</span>stu<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">;</span>
	t<span class="token punctuation">.</span>stu<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
	t<span class="token punctuation">.</span>stu<span class="token punctuation">.</span>score <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6559\u5E08\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> t<span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6559\u5E08\u7F16\u53F7\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> t<span class="token punctuation">.</span>id <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6559\u5E08\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> t<span class="token punctuation">.</span>age
		<span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B66\u751F\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> t<span class="token punctuation">.</span>stu<span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B66\u751F\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> t<span class="token punctuation">.</span>stu<span class="token punctuation">.</span>age
		<span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B66\u751F\u5206\u6570\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> t<span class="token punctuation">.</span>stu<span class="token punctuation">.</span>score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED3\u6784\u4F53\u505A\u51FD\u6570\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u505A\u51FD\u6570\u53C2\u6570" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u505A\u51FD\u6570\u53C2\u6570</h3><p>\u4F5C\u7528\uFF1A\u5C06\u7ED3\u6784\u4F53\u4F5C\u4E3A\u53C2\u6570\u60F3\u51FD\u6570\u4E2D\u4F20\u9012<br> \u4F20\u9012\u65B9\u5F0F\u6709\u4E24\u79CD\uFF1A\u503C\u4F20\u9012\u3001\u5730\u5740\u4F20\u9012</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>


<span class="token comment">//\u5B9A\u4E49\u5B66\u751F\u7ED3\u6784\u4F53</span>
<span class="token keyword">struct</span> <span class="token class-name">student</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 1.\u503C\u4F20\u9012</span>
<span class="token keyword">void</span> <span class="token function">printStudent1</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">student</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B50\u51FD\u6570\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 2.\u5730\u5740\u4F20\u9012</span>
<span class="token keyword">void</span> <span class="token function">printStudent2</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">student</span> <span class="token operator">*</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B50\u51FD\u65702\u59D3\u540D&quot;</span> <span class="token operator">&lt;&lt;</span> p<span class="token operator">-&gt;</span>name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

	<span class="token comment">// \u7ED3\u6784\u4F53\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570</span>

	<span class="token comment">// \u521B\u5EFA\u7ED3\u6784\u4F53\u53D8\u91CF</span>
	<span class="token keyword">struct</span> <span class="token class-name">student</span> s<span class="token punctuation">;</span>
	s<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">;</span>
	s<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	s<span class="token punctuation">.</span>score <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B66\u751F\u4FE1\u606F\uFF1A\u59D3\u540D &quot;</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span>age <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// \u503C\u4F20\u9012</span>
	<span class="token function">printStudent1</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5730\u5740\u4F20\u9012</span>
	<span class="token function">printStudent2</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED3\u6784\u4F53\u4E2D-const-\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u4E2D-const-\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u4E2D const \u4F7F\u7528\u573A\u666F</h3><p>\u4F5C\u7528\uFF1A\u7528 const \u6765\u9632\u6B62\u8BEF\u64CD\u4F5C</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>


<span class="token comment">//\u5B9A\u4E49\u5B66\u751F\u7ED3\u6784\u4F53</span>
<span class="token keyword">struct</span> <span class="token class-name">student</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//const \u4F7F\u7528\u573A\u666F, \u5C06\u51FD\u6570\u4E2D\u5F62\u53C2\u6539\u4E3A\u6307\u9488\uFF0C\u53EF\u4EE5\u51CF\u5C11\u5185\u5B58\u7A7A\u95F4\uFF0C\u800C\u4E14\u4E0D\u4F1A\u590D\u5236\u51FA\u6765\u65B0\u7684\u526F\u672C</span>
<span class="token keyword">void</span> <span class="token function">printStudent</span><span class="token punctuation">(</span><span class="token keyword">const</span> student <span class="token operator">*</span>s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// s-&gt;age = 150; \u52A0\u5165const\u4E4B\u540E\uFF0C\u4E00\u65E6\u6709\u4FEE\u6539\u64CD\u4F5C\u5C31\u4F1A\u62A5\u9519\uFF0C\u53EF\u4EE5\u9632\u6B62\u6211\u4EEC\u7684\u8BEF\u64CD\u4F5C</span>
 	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s<span class="token operator">-&gt;</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; \u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s<span class="token operator">-&gt;</span>age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; \u5206\u6570\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> s<span class="token operator">-&gt;</span>score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">struct</span> <span class="token class-name">student</span> s <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">90</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token comment">// \u901A\u8FC7\u51FD\u6570\u4F53\u6253\u5370\u7ED3\u6784\u4F53\u53D8\u91CF\u4FE1\u606F</span>
	<span class="token function">printStudent</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED3\u6784\u4F53\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u6848\u4F8B" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u6848\u4F8B</h3><p>\u6848\u4F8B\u63CF\u8FF0 1\uFF1A\u5B66\u6821\u6BD5\u8BBE\u9879\u76EE\uFF0C\u6BCF\u4E2A\u8001\u5E08\u5E26 5 \u4E2A\u5B66\u751F\uFF0C\u603B\u5171\u6709 3 \u4E2A\u8001\u5E08\uFF0C\u9700\u6C42\u5982\u4E0B\uFF0C\u8BBE\u8BA1\u5B66\u751F\u548C\u8001\u5E08\u7ED3\u6784\u4F53\u3002\u5176\u4E2D\u5728\u8001\u5E08\u7ED3\u6784\u4F53\u4E2D\uFF0C \u6709\u8001\u5E08\u59D3\u540D\u548C\u4E00\u4E2A\u5B58\u653E 5 \u540D\u8840\u8272\u548C\u529F\u80FD\u7684\u6570\u7EC4\u4F5C\u4E3A\u6210\u5458\u3002\u5B66\u751F\u6210\u5458\u6709\u59D3\u540D\u3001\u5206\u6570\u3001\u521B\u5EFA\u6570\u7EC4\u5B58\u653E 3 \u540D\u8001\u5E08\uFF0C\u901A\u8FC7\u51FD\u6570\u7ED9\u6BCF\u4E2A\u8001\u5E08 \u53CA\u6240\u5E26\u7684\u5B66\u751F\u8D4B\u503C\uFF0C\u6700\u7EC8\u6253\u5370\u51FA\u8001\u5E08\u6570\u636E\u53CA\u8001\u5E08\u6240\u5E26\u5B66\u751F\u6570\u636E\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctime&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>


<span class="token comment">// \u6309\u7167\u6307\u5B9A\u8303\u56F4\u751F\u6210\u968F\u673A\u5206\u6570</span>
<span class="token keyword">int</span> <span class="token function">Random</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">int</span> dis <span class="token operator">=</span> end <span class="token operator">-</span> start<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> dis <span class="token operator">+</span> start<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token comment">// \u5B9A\u4E49\u5B66\u751F\u7ED3\u6784\u4F53</span>
<span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u5B9A\u4E49\u6559\u5E08\u7ED3\u6784\u4F53</span>
<span class="token keyword">struct</span> <span class="token class-name">Teacher</span> <span class="token punctuation">{</span>
	string tName<span class="token punctuation">;</span>
	<span class="token comment">// \u5B66\u751F\u6570\u636E</span>
	<span class="token keyword">struct</span> <span class="token class-name">Student</span> sArray<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7ED9\u6559\u5E08\u548C\u5B66\u751F\u8D4B\u503C\u7684\u51FD\u6570</span>
<span class="token keyword">void</span> <span class="token function">allocateSpace</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Teacher</span> tArray<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span><span class="token punctuation">{</span>

	string nameSeed <span class="token operator">=</span> <span class="token string">&quot;ABCDE&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// \u7ED9\u6559\u5E08\u8D4B\u503C</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		tArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>tName <span class="token operator">=</span> <span class="token string">&quot;Teacher_&quot;</span><span class="token punctuation">;</span>
		tArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>tName <span class="token operator">+=</span> nameSeed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token comment">// \u7ED9\u5B66\u751F\u8D4B\u503C</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			tArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Student_&quot;</span><span class="token punctuation">;</span>
			tArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">+=</span> nameSeed<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>

			tArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>score <span class="token operator">=</span> <span class="token function">Random</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6253\u5370\u6240\u6709\u4FE1\u606F</span>
<span class="token keyword">void</span> <span class="token function">printAll</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Teacher</span> tArray<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6559\u5E08\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> tArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>tName <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B66\u751F\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> tArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5B66\u751F\u5206\u6570&quot;</span> <span class="token operator">&lt;&lt;</span> tArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>score <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

	<span class="token comment">// \u6DFB\u52A0\u968F\u673A\u6570\u79CD\u5B50</span>
	<span class="token function">srand</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//\u521B\u5EFA3\u540D\u6559\u5E08\u6570\u7EC4</span>
	<span class="token keyword">struct</span> <span class="token class-name">Teacher</span> tArray<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token comment">//\u901A\u8FC7\u51FD\u6570\u7ED93\u540D\u6559\u5E08\u7684\u4FE1\u606F\u8D4B\u503C\uFF0C\u5E76\u7ED9\u6559\u5E08\u5E26\u7684\u5B66\u751F\u4FE1\u606F\u8D4B\u503C</span>
	<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>tArray<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>tArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">allocateSpace</span><span class="token punctuation">(</span>tArray<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6253\u5370\u6240\u6709\u6559\u5E08\u548C\u5B66\u751F\u4FE1\u606F</span>
	<span class="token function">printAll</span><span class="token punctuation">(</span>tArray<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6848\u4F8B\u63CF\u8FF0 2\uFF1A\u8BBE\u8BA1\u4E00\u4E2A\u82F1\u96C4\u7684\u7ED3\u6784\u4F53\uFF0C\u5305\u542B\u6210\u5458\u59D3\u540D\u3001\u5E74\u9F84\u3001\u6027\u522B\uFF1B\u521B\u5EFA\u7ED3\u6784\u4F53\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u5B58\u653E 5 \u540D\u82F1\u96C4\u3002 \u901A\u8FC7\u5192\u6CE1\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5C06\u6570\u7EC4\u4E2D\u7684\u82F1\u96C4\u6309\u7167\u5E74\u9F84\u8FDB\u884C\u5347\u5E8F\u6392\u5E8F\uFF0C\u6700\u7EC8\u6253\u5370\u6392\u5E8F\u7ED3\u679C\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// \u5B9A\u4E49\u82F1\u96C4\u7ED3\u6784\u4F53</span>
<span class="token keyword">struct</span> <span class="token class-name">Hero</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	string sex<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u5192\u6CE1\u5347\u5E8F</span>
<span class="token keyword">void</span> <span class="token function">sortBubbling</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Hero</span> heroArray<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>heroArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">&gt;</span> heroArray<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">int</span> temp <span class="token operator">=</span> heroArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token punctuation">;</span>
				heroArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">=</span> heroArray<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token punctuation">;</span>
				heroArray<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">=</span> temp<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6253\u5370\u6240\u6709\u4FE1\u606F</span>
<span class="token keyword">void</span> <span class="token function">printinfo</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Hero</span> heroArray<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u82F1\u96C4\uFF1A&quot;</span><span class="token operator">&lt;&lt;</span> heroArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span><span class="token operator">&lt;&lt;</span> heroArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6027\u522B\uFF1A&quot;</span><span class="token operator">&lt;&lt;</span> heroArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sex  <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u8BBE\u8BA1\u82F1\u96C4\u7ED3\u6784\u4F53</span>
	<span class="token keyword">struct</span> <span class="token class-name">Hero</span> heroArray<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token punctuation">{</span><span class="token string">&quot;\u674E\u5E94&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7537&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;\u5362\u4FCA\u4E49&quot;</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7537&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;\u6731\u4EDD&quot;</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token string">&quot;\u7537&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;\u7A46\u5F18&quot;</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token string">&quot;\u7537&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string">&quot;\u7A46\u6625&quot;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&quot;\u7537&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>heroArray<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>heroArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5192\u6CE1\u6392\u5E8F\uFF1A\u82F1\u96C4\u6309\u7167\u5E74\u9F84\u8FDB\u884C\u5347\u5E8F\u6392\u5E8F</span>
	<span class="token function">sortBubbling</span><span class="token punctuation">(</span>heroArray<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u6253\u5370\u7ED3\u679C</span>
	<span class="token function">printinfo</span><span class="token punctuation">(</span>heroArray<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u901A\u8BAF\u5F55\u7BA1\u7406\u7CFB\u7EDF-\u7EC3\u4E60" tabindex="-1"><a class="header-anchor" href="#\u901A\u8BAF\u5F55\u7BA1\u7406\u7CFB\u7EDF-\u7EC3\u4E60" aria-hidden="true">#</a> \u901A\u8BAF\u5F55\u7BA1\u7406\u7CFB\u7EDF(\u7EC3\u4E60)</h2><ul><li>\u6DFB\u52A0\u8054\u7CFB\u4EBA\uFF1A\u5411\u901A\u8BAF\u5F55\u4E2D\u6DFB\u52A0\u65B0\u4EBA\uFF0C\u4FE1\u606F\u5305\u62EC\uFF08\u59D3\u540D\u3001\u6027\u522B\u3001\u5E74\u9F84\u3001\u8054\u7CFB\u7535\u8BDD\u3001\u5BB6\u5EAD\u4F4F\u5740\uFF09\u6700\u591A\u6DFB\u52A0 1000 \u4EBA</li><li>\u663E\u793A\u8054\u7CFB\u4EBA\uFF1A\u663E\u793A\u901A\u8BAF\u5F55\u4E2D\u6240\u6709\u8054\u7CFB\u4EBA</li><li>\u5220\u9664\u8054\u7CFB\u4EBA\uFF1A\u6309\u7167\u59D3\u540D\u8FDB\u884C\u5220\u9664\u6307\u5B9A\u8054\u7CFB\u4EBA</li><li>\u67E5\u627E\u8054\u7CFB\u4EBA\uFF1A\u6309\u7167\u59D3\u540D\u67E5\u770B\u6307\u5B9A\u8054\u7CFB\u4EBA\u4FE1\u606F</li><li>\u4FEE\u6539\u8054\u7CFB\u4EBA\uFF1A\u6309\u7167\u59D3\u540D\u91CD\u65B0\u4FEE\u6539\u6307\u5B9A\u8054\u7CFB\u4EBA</li><li>\u6E05\u7A7A\u8054\u7CFB\u4EBA\uFF1A\u6E05\u7A7A\u901A\u8BAF\u5F55\u4E2D\u6240\u6709\u4FE1\u606F</li><li>\u9000\u51FA\u8054\u7CFB\u4EBA\uFF1A\u9000\u51FA\u5F53\u524D\u4F7F\u7528\u7684\u901A\u8BAF\u5F55</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// \u663E\u793A\u63D0\u793A</span>
<span class="token keyword">void</span> <span class="token function">shwoMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;*************\u901A\u8BAF\u5F55\u7CFB\u7EDF**************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;***********   1\u3001\u6DFB\u52A0   *************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;***********   2\u3001\u663E\u793A   *************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;***********   3\u3001\u5220\u9664   *************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;***********   4\u3001\u67E5\u627E   *************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;***********   5\u3001\u4FEE\u6539   *************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;***********   6\u3001\u6E05\u7A7A   *************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;***********   0\u3001\u9000\u51FA   *************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;*************************************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8054\u7CFB\u4EBA\u7ED3\u6784\u4F53</span>
<span class="token keyword">struct</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> sex<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	string phone<span class="token punctuation">;</span>
	string address<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u901A\u8BAF\u5F55\u7ED3\u6784\u4F53</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">1000</span> </span><span class="token comment">// \u6700\u5927\u4EBA\u6570</span></span>
<span class="token keyword">struct</span> <span class="token class-name">Addressbooks</span> <span class="token punctuation">{</span>
	<span class="token keyword">struct</span> <span class="token class-name">Person</span> personArray<span class="token punctuation">[</span>MAX<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u901A\u8BAF\u5F55\u4E2D\u4FDD\u5B58\u7684\u8054\u7CFB\u4EBA\u6570\u7EC4</span>
	<span class="token keyword">int</span> m_Size<span class="token punctuation">;</span> <span class="token comment">// \u901A\u8BAF\u5F55\u4E2D\u4EBA\u5458\u4E2A\u6570</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6DFB\u52A0\u901A\u8BAF\u5F55:\u5411\u901A\u8BAF\u5F55\u4E2D\u6DFB\u52A0\u65B0\u4EBA\uFF0C\u4FE1\u606F\u5305\u62EC\uFF08\u59D3\u540D\u3001\u6027\u522B\u3001\u5E74\u9F84\u3001\u8054\u7CFB\u7535\u8BDD\u3001\u5BB6\u5EAD\u4F4F\u5740\uFF09\u6700\u591A\u6DFB\u52A0 1000 \u4EBA</span>
<span class="token keyword">void</span> <span class="token function">addPerson</span><span class="token punctuation">(</span>Addressbooks <span class="token operator">*</span>abs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5224\u65AD\u901A\u8BAF\u5F55\u662F\u5426\u5DF2\u6EE1\uFF0C\u6EE1\u4E86\u63D0\u793A\u7528\u6237\u4E0D\u6DFB\u52A0</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>abs<span class="token operator">-&gt;</span>m_Size <span class="token operator">==</span> MAX<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u901A\u8BAF\u5F55\u5DF2\u6EE1\uFF0C\u65E0\u6CD5\u6DFB\u52A0&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u6DFB\u52A0\u5177\u4F53\u8054\u7CFB\u4EBA</span>
		<span class="token comment">// \u540D\u5B57</span>
		string in_name<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u59D3\u540D:&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cin <span class="token operator">&gt;&gt;</span> in_name<span class="token punctuation">;</span>
		abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>abs<span class="token operator">-&gt;</span>m_Size<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> in_name<span class="token punctuation">;</span>
		<span class="token comment">// \u6027\u522B</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u6027\u522B\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;1----\u7537&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;2----\u5973&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token keyword">int</span> in_sex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			cin <span class="token operator">&gt;&gt;</span> in_sex<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>in_sex <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> in_sex <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>abs<span class="token operator">-&gt;</span>m_Size<span class="token punctuation">]</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> in_sex<span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8F93\u5165\u6709\u8BEF\uFF0C\u8BF7\u91CD\u65B0\u8F93\u5165&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// \u5E74\u9F84</span>
		<span class="token keyword">int</span> in_age<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cin <span class="token operator">&gt;&gt;</span> in_age<span class="token punctuation">;</span>
		abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>abs<span class="token operator">-&gt;</span>m_Size<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">=</span> in_age<span class="token punctuation">;</span>
		<span class="token comment">// \u624B\u673A\u53F7</span>
		string in_phone<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u624B\u673A\u53F7\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cin <span class="token operator">&gt;&gt;</span> in_phone<span class="token punctuation">;</span>
		abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>abs<span class="token operator">-&gt;</span>m_Size<span class="token punctuation">]</span><span class="token punctuation">.</span>phone <span class="token operator">=</span> in_phone<span class="token punctuation">;</span>
		<span class="token comment">// \u5730\u5740</span>
		string in_address<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u5730\u5740\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cin <span class="token operator">&gt;&gt;</span> in_address<span class="token punctuation">;</span>
		abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>abs<span class="token operator">-&gt;</span>m_Size<span class="token punctuation">]</span><span class="token punctuation">.</span>address <span class="token operator">=</span> in_address<span class="token punctuation">;</span>

		<span class="token comment">// \u66F4\u65B0\u901A\u8BAF\u5F55\u4EBA\u6570</span>
		abs<span class="token operator">-&gt;</span>m_Size<span class="token operator">++</span><span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6DFB\u52A0\u6210\u529F\uFF01\uFF01&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

		<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6309\u4EFB\u610F\u952E\u7EE7\u7EED</span>
		<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;cls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u5C4F\u64CD\u4F5C</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u67E5\u770B\u8054\u7CFB\u4EBA:\u663E\u793A\u901A\u8BAF\u5F55\u4E2D\u6240\u6709\u8054\u7CFB\u4EBA</span>
<span class="token keyword">void</span> <span class="token function">showPerson</span><span class="token punctuation">(</span>Addressbooks<span class="token operator">*</span> abs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>abs<span class="token operator">-&gt;</span>m_Size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5F53\u524D\u8BB0\u5F55\u4E3A\u7A7A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> abs<span class="token operator">-&gt;</span>m_Size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6027\u522B\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sex <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&quot;\u7537&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;\u5973&quot;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u624B\u673A\u53F7\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>phone <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5730\u5740\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>address <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6309\u4EFB\u610F\u952E\u7EE7\u7EED</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;cls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u5C4F\u64CD\u4F5C</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u68C0\u6D4B\u8054\u7CFB\u4EBA\u662F\u5426\u5B58\u5728:\u5982\u679C\u5B58\u5728\u8FD4\u56DE\u8054\u7CFB\u4EBA\u6240\u5728\u4F4D\u7F6E\uFF0C\u4E0D\u5B58\u5728\u8FD4\u56DE-1</span>
<span class="token keyword">int</span> <span class="token function">isExist</span><span class="token punctuation">(</span>Addressbooks <span class="token operator">*</span> abs<span class="token punctuation">,</span> string name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> abs<span class="token operator">-&gt;</span>m_Size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">==</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> i<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5220\u9664:\u6309\u7167\u59D3\u540D\u8FDB\u884C\u5220\u9664\u6307\u5B9A\u8054\u7CFB\u4EBA</span>
<span class="token keyword">void</span> <span class="token function">deletePerson</span><span class="token punctuation">(</span>Addressbooks <span class="token operator">*</span>abs<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>abs<span class="token operator">-&gt;</span>m_Size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5F53\u524D\u8BB0\u5F55\u4E3A\u7A7A,\u6CA1\u6709\u5220\u9664\u9879\u522B&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		string user_input_name<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u5220\u9664\u8054\u7CFB\u4EBA\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cin <span class="token operator">&gt;&gt;</span> user_input_name<span class="token punctuation">;</span>
		<span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">isExist</span><span class="token punctuation">(</span>abs<span class="token punctuation">,</span> user_input_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5220\u9664</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> result<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> abs<span class="token operator">-&gt;</span>m_Size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
			<span class="token punctuation">{</span>
				<span class="token comment">// \u6570\u636E\u524D\u79FB</span>
				abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			abs<span class="token operator">-&gt;</span>m_Size<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0\u901A\u8BAF\u5F55\u4E2D\u4EBA\u5458\u6570\u91CF</span>
			<span class="token comment">// \u63D0\u793A\u5220\u9664\u6210\u529F\u5E76\u66F4\u65B0\u901A\u8BAF\u5F55\u603B\u6570</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5220\u9664\u6210\u529F\uFF01\uFF01\uFF01&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5220\u9664\u4EBA\u5458\u4E0D\u5B58\u5728\uFF0C\u8BF7\u786E\u8BA4\u8F93\u5165\u8054\u7CFB\u4EBA\u59D3\u540D\u662F\u5426\u6B63\u786E&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6309\u4EFB\u610F\u952E\u7EE7\u7EED</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;cls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u5C4F\u64CD\u4F5C</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u67E5\u627E\uFF1A\u6309\u7167\u59D3\u540D\u67E5\u770B\u6307\u5B9A\u8054\u7CFB\u4EBA\u4FE1\u606F</span>
<span class="token keyword">void</span> <span class="token function">lookupPerson</span><span class="token punctuation">(</span>Addressbooks<span class="token operator">*</span> abs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>abs<span class="token operator">-&gt;</span>m_Size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u901A\u8BAF\u5F55\u4E3A\u7A7A\uFF0C\u6682\u4E0D\u652F\u6301\u67E5\u627E&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		string look_user<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u9700\u8981\u67E5\u627E\u7684\u8054\u7CFB\u4EBA\u59D3\u540D&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cin <span class="token operator">&gt;&gt;</span> look_user<span class="token punctuation">;</span>
		<span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">isExist</span><span class="token punctuation">(</span>abs<span class="token punctuation">,</span> look_user<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;-------------------\u67E5\u8BE2\u4EBA\u5458\u4FE1\u606F-------------------&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u59D3\u540D\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6027\u522B\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>sex <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&quot;\u7537&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;\u5973&quot;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u624B\u673A\u53F7\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>phone <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5730\u5740\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>address <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u67E5\u8BE2\u4EBA\u5458\u4E0D\u5B58\u5728\uFF0C\u8BF7\u786E\u8BA4\u8F93\u5165\u8054\u7CFB\u4EBA\u59D3\u540D\u662F\u5426\u6B63\u786E&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6309\u4EFB\u610F\u952E\u7EE7\u7EED</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;cls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u5C4F\u64CD\u4F5C</span>

<span class="token punctuation">}</span>

<span class="token comment">// \u4FEE\u6539\uFF1A\u6309\u7167\u59D3\u540D\u91CD\u65B0\u4FEE\u6539\u6307\u5B9A\u8054\u7CFB\u4EBA</span>
<span class="token keyword">void</span> <span class="token function">modifyPerson</span><span class="token punctuation">(</span>Addressbooks <span class="token operator">*</span>abs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>abs<span class="token operator">-&gt;</span>m_Size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u901A\u8BAF\u5F55\u4E3A\u7A7A\uFF0C\u6682\u4E0D\u652F\u6301\u4FEE\u6539&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		string modify_user<span class="token punctuation">;</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u9700\u8981\u91CD\u65B0\u4FEE\u6539\u7684\u8054\u7CFB\u4EBA\u59D3\u540D&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		cin <span class="token operator">&gt;&gt;</span> modify_user<span class="token punctuation">;</span>
		<span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">isExist</span><span class="token punctuation">(</span>abs<span class="token punctuation">,</span> modify_user<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

			string in_name<span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u59D3\u540D:&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			cin <span class="token operator">&gt;&gt;</span> in_name<span class="token punctuation">;</span>
			abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> in_name<span class="token punctuation">;</span>

			<span class="token comment">// \u6027\u522B</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u6027\u522B\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;1----\u7537&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;2----\u5973&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			<span class="token keyword">int</span> in_sex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
			<span class="token punctuation">{</span>
				cin <span class="token operator">&gt;&gt;</span> in_sex<span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>in_sex <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> in_sex <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> in_sex<span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8F93\u5165\u6709\u8BEF\uFF0C\u8BF7\u91CD\u65B0\u8F93\u5165&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// \u5E74\u9F84</span>
			<span class="token keyword">int</span> in_age<span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u5E74\u9F84\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			cin <span class="token operator">&gt;&gt;</span> in_age<span class="token punctuation">;</span>
			abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">=</span> in_age<span class="token punctuation">;</span>
			<span class="token comment">// \u624B\u673A\u53F7</span>
			string in_phone<span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u624B\u673A\u53F7\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			cin <span class="token operator">&gt;&gt;</span> in_phone<span class="token punctuation">;</span>
			abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>phone <span class="token operator">=</span> in_phone<span class="token punctuation">;</span>
			<span class="token comment">// \u5730\u5740</span>
			string in_address<span class="token punctuation">;</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8BF7\u8F93\u5165\u5730\u5740\uFF1A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			cin <span class="token operator">&gt;&gt;</span> in_address<span class="token punctuation">;</span>
			abs<span class="token operator">-&gt;</span>personArray<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span>address <span class="token operator">=</span> in_address<span class="token punctuation">;</span>

			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8054\u7CFB\u4EBA\u4FE1\u606F\u4FEE\u6539\u6210\u529F&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u4FEE\u6539\u4EBA\u5458\u4FE1\u606F\u4E0D\u5B58\u5728\uFF0C\u8BF7\u786E\u8BA4\u8F93\u5165\u8054\u7CFB\u4EBA\u59D3\u540D\u662F\u5426\u6B63\u786E&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6309\u4EFB\u610F\u952E\u7EE7\u7EED</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;cls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u5C4F\u64CD\u4F5C</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u6E05\u7A7A:\u6E05\u7A7A\u901A\u8BAF\u5F55\u4E2D\u6240\u6709\u4FE1\u606F</span>
<span class="token keyword">void</span> <span class="token function">emptyAllPerson</span><span class="token punctuation">(</span>Addressbooks<span class="token operator">*</span> abs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	abs<span class="token operator">-&gt;</span>m_Size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u901A\u8BAF\u5F55\u5DF2\u6E05\u7A7A&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6309\u4EFB\u610F\u952E\u7EE7\u7EED</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;cls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u5C4F\u64CD\u4F5C</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// \u521B\u5EFA\u901A\u8BAF\u5F55\u7ED3\u6784\u4F53\u53D8\u91CF</span>
	Addressbooks abs<span class="token punctuation">;</span>
	<span class="token comment">// \u521D\u59CB\u5316\u901A\u8BAF\u5F55\u4E2D\u5F53\u524D\u4EBA\u5458\u4E2A\u6570</span>
	abs<span class="token punctuation">.</span>m_Size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

	<span class="token keyword">int</span> select <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u7528\u6237\u9009\u62E9\u8F93\u5165\u53D8\u91CF</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// \u663E\u793A\u63D0\u793A</span>
		<span class="token function">shwoMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		cin <span class="token operator">&gt;&gt;</span> select<span class="token punctuation">;</span>
		<span class="token keyword">switch</span> <span class="token punctuation">(</span>select<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token comment">// \u6DFB\u52A0</span>
			<span class="token function">addPerson</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>abs<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token comment">// \u663E\u793A</span>
			<span class="token function">showPerson</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>abs<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token comment">// \u5220\u9664</span>
			<span class="token function">deletePerson</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>abs<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token comment">// \u67E5\u627E</span>
			<span class="token function">lookupPerson</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>abs<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> <span class="token comment">// \u4FEE\u6539</span>
			<span class="token function">modifyPerson</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>abs<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span> <span class="token comment">// \u6E05\u7A7A</span>
			<span class="token function">emptyAllPerson</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>abs<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token comment">// \u9000\u51FA</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6B22\u8FCE\u4E0B\u6B21\u4F7F\u7528&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
			<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">default</span><span class="token operator">:</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,232);function g(y,h){const t=o("ExternalLinkIcon");return l(),c("div",null,[u,n("p",null,[r,n("a",k,[s("\u5173\u952E\u5B57"),p(t)])]),d,n("ul",null,[v,n("li",null,[s("\u5B57\u7B26\u578B\u53D8\u91CF\u5E76\u4E0D\u662F\u5305\u5B57\u7B26\u672C\u8EAB\u653E\u5230\u5185\u5B58\u4E2D\u5B58\u50A8\uFF0C\u800C\u662F\u5C06\u5BF9\u5E94\u7684 "),n("a",m,[s("ASCII \u7F16\u7801\u8868"),p(t)]),s("\u653E\u5230\u5B58\u50A8\u5355\u5143")])]),b])}const q=e(i,[["render",g],["__file","C++\u57FA\u7840\u8BED\u6CD5.html.vue"]]);export{q as default};
